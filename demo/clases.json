[{"name":"AABB","publicfunctions":[{"type":[""],"definition":["driderSDK::AABB::AABB"],"argsstring":["()"],"name":["AABB"],"detaileddescription":[{"para":["Default constructor "]}],"description":"Default constructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::AABB::AABB"],"argsstring":["(float width, float height, const Vector3D &C)"],"name":["AABB"],"detaileddescription":[{"para":["Initialize the constructor with the given values",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["s"]}],"parameterdescription":[{"para":[{"_":"Size of the ","ref":[{"_":"AABB","$":{"refid":"classdrider_s_d_k_1_1_a_a_b_b","kindref":"compound"}}]}]}]},{"parameternamelist":[{"parametername":["C"]}],"parameterdescription":[{"para":["Center of the box given by a vector 3D "]}]}]}]}]}],"description":"Initialize the constructor with the given values [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::AABB::AABB"],"argsstring":["(AABB &&A)=default"],"name":["AABB"],"detaileddescription":[{"para":["Move constructor. "]}],"description":"Move constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::AABB::AABB"],"argsstring":["(const AABB &A)"],"name":["AABB"],"detaileddescription":[{"para":["Copy constructor. "]}],"description":"Copy constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::AABB::~AABB"],"argsstring":["()"],"name":["~AABB"],"detaileddescription":[{"para":["Default destructor "]}],"description":"Default destructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::AABB::intersect"],"argsstring":["(AABB &aabb)"],"name":["intersect"],"detaileddescription":[{"para":[{"_":"Checks for an intersection with another ","ref":[{"_":"AABB","$":{"refid":"classdrider_s_d_k_1_1_a_a_b_b","kindref":"compound"}}]},{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["aabb"]}],"parameterdescription":[{"para":[{"_":"The other  to check","ref":[{"_":"AABB","$":{"refid":"classdrider_s_d_k_1_1_a_a_b_b","kindref":"compound"}}]}]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if it intersects "]}]}]}],"description":"[object Object] [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::AABB::intersect"],"argsstring":["(Sphere &sphere)"],"name":["intersect"],"detaileddescription":[{"para":["Checks for an intersection with a sphere",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["sphere"]}],"parameterdescription":[{"para":["The sphere to check"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if it intersects "]}]}]}],"description":"Checks for an intersection with a sphere [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::AABB::intersect"],"argsstring":["(Plane &plane)"],"name":["intersect"],"detaileddescription":[{"para":["Checks for an intersection with a plane",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["plane"]}],"parameterdescription":[{"para":["The plane to check"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if it intersects "]}]}]}],"description":"Checks for an intersection with a plane [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::AABB::intersect"],"argsstring":["(Frustrum &frustrum)"],"name":["intersect"],"detaileddescription":[{"para":["Checks for an intersection with a frustrum",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["frustrum"]}],"parameterdescription":[{"para":["The frustrum to check"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if it intersects "]}]}]}],"description":"Checks for an intersection with a frustrum [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::AABB::intersect"],"argsstring":["(Ray &ray)"],"name":["intersect"],"detaileddescription":[{"para":["Checks for an intersection with a ray",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["ray"]}],"parameterdescription":[{"para":["The ray to check"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":[{"_":"True if the ray intersects with the  ","ref":[{"_":"AABB","$":{"refid":"classdrider_s_d_k_1_1_a_a_b_b","kindref":"compound"}}]}]}]}]}],"description":"Checks for an intersection with a ray [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::AABB::intersect"],"argsstring":["(Vector3D &point)"],"name":["intersect"],"detaileddescription":[{"para":[{"_":"Checks if the point is in the ","ref":[{"_":"AABB","$":{"refid":"classdrider_s_d_k_1_1_a_a_b_b","kindref":"compound"}}]},{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["point"]}],"parameterdescription":[{"para":[{"_":" that represents the point","ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if the point is inside "]}]}]}],"description":"[object Object] [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"Nombre del test: AABB","testClase":{"name":"AABB","tests":"5","failures":"0","disabled":"0","errors":"0","time":"0.001","testCases":[{"data":{"name":"intersectAABB","status":"run","time":"0","classname":"AABB"},"name":"intersectAABB"},{"data":{"name":"intersectPoint","status":"run","time":"0","classname":"AABB"},"name":"intersectPoint"},{"data":{"name":"intersectPlane","status":"run","time":"0","classname":"AABB"},"name":"intersectPlane"},{"data":{"name":"intersectFrustrum","status":"run","time":"0","classname":"AABB"},"name":"intersectFrustrum"},{"data":{"name":"intersectRay","status":"run","time":"0","classname":"AABB"},"name":"intersectRay"}]}},{"name":"Capsule","publicfunctions":[{"type":[""],"definition":["driderSDK::Capsule::Capsule"],"argsstring":["()"],"name":["Capsule"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Capsule::intersects"],"argsstring":["(const Plane &plane)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Capsule::intersects"],"argsstring":["(const Sphere &sphere)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Capsule::intersects"],"argsstring":["(const AABB &aabb)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Capsule::intersects"],"argsstring":["(const Capsule &capsule)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Capsule::intersects"],"argsstring":["(const Frustrum &frustrum)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Codec","publicfunctions":[],"testFile":"No existe Test con el nombre de la clase"},{"name":"Degree","publicfunctions":[{"type":[""],"definition":["driderSDK::Degree::Degree"],"argsstring":["()"],"name":["Degree"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Degree::Degree"],"argsstring":["(Degree &&V)=default"],"name":["Degree"],"detaileddescription":[{"para":["Move constructor. "]}],"description":"Move constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Degree::Degree"],"argsstring":["(const Degree &V)"],"name":["Degree"],"detaileddescription":[{"para":["Copy constructor. "]}],"description":"Copy constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Degree::Degree"],"argsstring":["(float value)"],"name":["Degree"],"detaileddescription":[{"para":["Initialize class with value.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["value"]}],"parameterdescription":[{"para":["Initial value of the class. "]}]}]}]}]}],"description":"Initialize class with value. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Degree::~Degree"],"argsstring":["()"],"name":["~Degree"],"detaileddescription":[{"para":["Default destructor. "]}],"description":"Default destructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Degree::toRadian"],"argsstring":["() const"],"name":["toRadian"],"detaileddescription":[{"para":[{"_":"Returns a  class with a value equal to the actual degrees in radians.","ref":[{"_":"Radian","$":{"refid":"classdrider_s_d_k_1_1_radian","kindref":"compound"}}]},{"simplesect":[{"$":{"kind":"return"},"para":["Class radian. "]}]}]}],"description":"[object Object] [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Degree","$":{"refid":"classdrider_s_d_k_1_1_degree","kindref":"compound"}}]}],"definition":["Degree & driderSDK::Degree::unwind"],"argsstring":["()"],"name":["unwind"],"detaileddescription":[{"para":["Limit the value in [0, 360)",{"simplesect":[{"$":{"kind":"return"},"para":["A reference to this class. "]}]}]}],"description":"Limit the value in [0, 360) [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Degree::operator float"],"argsstring":["()"],"name":["operator float"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Degree","$":{"refid":"classdrider_s_d_k_1_1_degree","kindref":"compound"}}]}],"definition":["Degree & driderSDK::Degree::operator="],"argsstring":["(float V)"],"name":["operator="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Degree","$":{"refid":"classdrider_s_d_k_1_1_degree","kindref":"compound"}}]}],"definition":["Degree & driderSDK::Degree::operator+="],"argsstring":["(float V)"],"name":["operator+="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Degree","$":{"refid":"classdrider_s_d_k_1_1_degree","kindref":"compound"}}]}],"definition":["Degree & driderSDK::Degree::operator-="],"argsstring":["(float V)"],"name":["operator-="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Degree","$":{"refid":"classdrider_s_d_k_1_1_degree","kindref":"compound"}}]}],"definition":["Degree & driderSDK::Degree::operator*="],"argsstring":["(float V)"],"name":["operator*="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Degree","$":{"refid":"classdrider_s_d_k_1_1_degree","kindref":"compound"}}]}],"definition":["Degree & driderSDK::Degree::operator/="],"argsstring":["(float V)"],"name":["operator/="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"Nombre del test: Degree","testClase":{"name":"Degree","tests":"10","failures":"0","disabled":"0","errors":"0","time":"0.01","testCases":[{"data":{"name":"floatOperator","status":"run","time":"0","classname":"Degree"},"name":"floatOperator"},{"data":{"name":"floatConstructor","status":"run","time":"0","classname":"Degree"},"name":"floatConstructor"},{"data":{"name":"CopyConstructor","status":"run","time":"0","classname":"Degree"},"name":"CopyConstructor"},{"data":{"name":"ToRadian","status":"run","time":"0","classname":"Degree"},"name":"ToRadian"},{"data":{"name":"Unwind","status":"run","time":"0","classname":"Degree"},"name":"Unwind"},{"data":{"name":"equalFloat","status":"run","time":"0","classname":"Degree"},"name":"equalFloat"},{"data":{"name":"plusEqualFloat","status":"run","time":"0","classname":"Degree"},"name":"plusEqualFloat"},{"data":{"name":"lessEqualFloat","status":"run","time":"0","classname":"Degree"},"name":"lessEqualFloat"},{"data":{"name":"mulEqualFloat","status":"run","time":"0.001","classname":"Degree"},"name":"mulEqualFloat"},{"data":{"name":"divEqualFloat","status":"run","time":"0","classname":"Degree"},"name":"divEqualFloat"}]}},{"name":"Face","publicfunctions":[],"testFile":"No existe Test con el nombre de la clase"},{"name":"FileSystem","publicfunctions":[{"type":["bool"],"definition":["bool driderSDK::FileSystem::load"],"argsstring":["(const std::string filename, std::string &bufferOut)"],"name":["load"],"detaileddescription":[{"para":["The Load operation determines how many bytes are in the file and returns the amount in riSize.","Param filename The name of the file to load.","Param bufferOut The output where the file will be loaded","Return Boolean value is true if the load is successful, in which case the outputs racBuffer and riSize are valid.","If the returned value is false, one of the following conditions has occurred: The file does not exist. The file cannot be opened for reading (the file attributes might not allow this). "]}],"description":"The Load operation determines how many bytes are in the file and returns the amount in riSize. Param filename The name of the file to load. Param bufferOut The output where the file will be loaded Return Boolean value is true if the load is successful, in which case the outputs racBuffer and riSize are valid. If the returned value is false, one of the following conditions has occurred: The file does not exist. The file cannot be opened for reading (the file attributes might not allow this).  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::FileSystem::save"],"argsstring":["(const std::string filename, const std::string &bufferToSave)"],"name":["save"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::FileSystem::append"],"argsstring":["(const std::string filename, const std::string &bufferToAppend)"],"name":["append"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Frustrum","publicfunctions":[{"type":[{"_":"std::array< , 6 >","ref":[{"_":"Plane","$":{"refid":"classdrider_s_d_k_1_1_plane","kindref":"compound"}}]}],"definition":["std::array<Plane,6> driderSDK::Frustrum::planes"],"argsstring":[""],"name":["planes"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Intersect","publicfunctions":[],"testFile":"No existe Test con el nombre de la clase"},{"name":"Logger","publicfunctions":[{"type":[""],"definition":["driderSDK::Logger::Logger"],"argsstring":["()"],"name":["Logger"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["virtual driderSDK::Logger::~Logger"],"argsstring":["()"],"name":["~Logger"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Logger::reset"],"argsstring":["()"],"name":["reset"],"detaileddescription":[{"para":["This function reset the content of the logger's html. "]}],"description":"This function reset the content of the logger's html.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Logger::addError"],"argsstring":["(const std::string Filename, int lineNumber, const std::string message)"],"name":["addError"],"detaileddescription":[{"para":[{"_":"Adds a message in the error area. Use  in the Filename parameter. Use  in the Filename parameter. ","bold":["FILE","LINE"]}]}],"description":"[object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Logger::addWarning"],"argsstring":["(const std::string Filename, int lineNumber, const std::string message)"],"name":["addWarning"],"detaileddescription":[{"para":[{"_":"Adds a message in the warning area. Use  in the Filename parameter. Use  in the Filename parameter. ","bold":["FILE","LINE"]}]}],"description":"[object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Math","publicfunctions":[{"type":["const float"],"definition":["const float driderSDK::Math::PI"],"argsstring":[""],"name":["PI"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::HALF_PI"],"argsstring":[""],"name":["HALF_PI"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::QUARTER_PI"],"argsstring":[""],"name":["QUARTER_PI"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::TWO_PI"],"argsstring":[""],"name":["TWO_PI"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::ONE_OVER_PI"],"argsstring":[""],"name":["ONE_OVER_PI"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::EULER"],"argsstring":[""],"name":["EULER"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::DEGREE_TO_RADIAN"],"argsstring":[""],"name":["DEGREE_TO_RADIAN"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::RADIAN_TO_DEGREE"],"argsstring":[""],"name":["RADIAN_TO_DEGREE"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::EPSILON"],"argsstring":[""],"name":["EPSILON"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::SMALL_NUMBER"],"argsstring":[""],"name":["SMALL_NUMBER"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::MAX_FLOAT"],"argsstring":[""],"name":["MAX_FLOAT"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::MIN_FLOAT"],"argsstring":[""],"name":["MIN_FLOAT"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float"],"definition":["const float driderSDK::Math::MIN_POSITIVE_FLOAT"],"argsstring":[""],"name":["MIN_POSITIVE_FLOAT"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int64"],"definition":["const Int64 driderSDK::Math::MAX_INT64"],"argsstring":[""],"name":["MAX_INT64"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int64"],"definition":["const Int64 driderSDK::Math::MIN_INT64"],"argsstring":[""],"name":["MIN_INT64"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int32"],"definition":["const Int32 driderSDK::Math::MAX_INT32"],"argsstring":[""],"name":["MAX_INT32"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int32"],"definition":["const Int32 driderSDK::Math::MIN_INT32"],"argsstring":[""],"name":["MIN_INT32"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int16"],"definition":["const Int16 driderSDK::Math::MAX_INT16"],"argsstring":[""],"name":["MAX_INT16"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int16"],"definition":["const Int16 driderSDK::Math::MIN_INT16"],"argsstring":[""],"name":["MIN_INT16"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int8"],"definition":["const Int8 driderSDK::Math::MAX_INT8"],"argsstring":[""],"name":["MAX_INT8"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int8"],"definition":["const Int8 driderSDK::Math::MIN_INT8"],"argsstring":[""],"name":["MIN_INT8"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const UInt64"],"definition":["const UInt64 driderSDK::Math::MAX_UINT64"],"argsstring":[""],"name":["MAX_UINT64"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const UInt32"],"definition":["const UInt32 driderSDK::Math::MAX_UINT32"],"argsstring":[""],"name":["MAX_UINT32"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const UInt16"],"definition":["const UInt16 driderSDK::Math::MAX_UINT16"],"argsstring":[""],"name":["MAX_UINT16"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const UInt8"],"definition":["const UInt8 driderSDK::Math::MAX_UINT8"],"argsstring":[""],"name":["MAX_UINT8"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Matrix3x3","publicfunctions":[{"type":[""],"definition":["driderSDK::Matrix3x3::Matrix3x3"],"argsstring":["()"],"name":["Matrix3x3"],"detaileddescription":[{"para":["TEST::operatorEqual","Default constructor "]}],"description":"TEST::operatorEqual Default constructor  ","testName":"operatorEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorEqual"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix3x3::Matrix3x3"],"argsstring":["(Math::FORCE_INIT k)"],"name":["Matrix3x3"],"detaileddescription":[{"para":["TEST::forceInit","Default constructor","Values are initialized with 0(kZero) or identity matrix(kIdentity). "]}],"description":"TEST::forceInit Default constructor Values are initialized with 0(kZero) or identity matrix(kIdentity).  ","testName":"forceInit","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"forceInit","status":"run","time":"0","classname":"Matrix3x3"},"name":"forceInit"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix3x3::Matrix3x3"],"argsstring":["(Matrix3x3 &&M)=default"],"name":["Matrix3x3"],"detaileddescription":[{"para":["TEST::moveConstructor","Move constructor "]}],"description":"TEST::moveConstructor Move constructor  ","testName":"moveConstructor","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"moveConstructor","status":"run","time":"0","classname":"Matrix3x3"},"name":"moveConstructor"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix3x3::Matrix3x3"],"argsstring":["(const Matrix3x3 &M)"],"name":["Matrix3x3"],"detaileddescription":[{"para":["TEST::constructForMatrix3x3","Copy constructor "]}],"description":"TEST::constructForMatrix3x3 Copy constructor  ","testName":"constructForMatrix3x3","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"constructForMatrix3x3","status":"run","time":"0","classname":"Matrix3x3"},"name":"constructForMatrix3x3"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix3x3::Matrix3x3"],"argsstring":["(float v0x, float v0y, float v0z, float v1x, float v1y, float v1z, float v2x, float v2y, float v2z)"],"name":["Matrix3x3"],"detaileddescription":[{"para":["TEST::constructFor9Floats","Initialize constructor with values.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["v0x","v0y","v0z"]}],"parameterdescription":[{"para":["The x, y, z values of the vector, first raw"]}]},{"parameternamelist":[{"parametername":["v1x","v1y","v1z"]}],"parameterdescription":[{"para":["The x, y, z values of the vector, second raw"]}]},{"parameternamelist":[{"parametername":["v2x","v2y","v2z"]}],"parameterdescription":[{"para":["The x, y, z values of the vector, third raw "]}]}]}]}]}],"description":"TEST::constructFor9Floats Initialize constructor with values. [object Object] ","testName":"constructFor9Floats","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"constructFor9Floats","status":"run","time":"0","classname":"Matrix3x3"},"name":"constructFor9Floats"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix3x3::Matrix3x3"],"argsstring":["(Vector3D vector0, Vector3D vector1, Vector3D vector2)"],"name":["Matrix3x3"],"detaileddescription":[{"para":["TEST::constructFor3Vectors","Initialize constructor with values.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["vector0"]}],"parameterdescription":[{"para":["The vector0(x, y, z) values of the vector, first row"]}]},{"parameternamelist":[{"parametername":["vector10-vector12"]}],"parameterdescription":[{"para":["The vector1(x, y, z) values of the vector, second row"]}]},{"parameternamelist":[{"parametername":["vector20-vector22"]}],"parameterdescription":[{"para":["The vector2(x, y, z) values of the vector, third row "]}]}]}]}]}],"description":"TEST::constructFor3Vectors Initialize constructor with values. [object Object] ","testName":"constructFor3Vectors","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"constructFor3Vectors","status":"run","time":"0","classname":"Matrix3x3"},"name":"constructFor3Vectors"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix3x3::~Matrix3x3"],"argsstring":["()"],"name":["~Matrix3x3"],"detaileddescription":[{"para":["TEST::destructor Default destructor "]}],"description":"TEST::destructor Default destructor  ","testName":"destructor","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"destructor","status":"run","time":"0","classname":"Matrix3x3"},"name":"destructor"},"errorFlag":false},{"type":["float"],"definition":["float driderSDK::Matrix3x3::determinant"],"argsstring":["() const"],"name":["determinant"],"detaileddescription":[{"para":["TEST::determinant","Calculates the determinant of the matrix",{"simplesect":[{"$":{"kind":"return"},"para":["determinant. "]}]}]}],"description":"TEST::determinant Calculates the determinant of the matrix [object Object] ","testName":"determinant","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"determinant","status":"run","time":"0","classname":"Matrix3x3"},"name":"determinant"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix3x3::cofactor"],"argsstring":["()"],"name":["cofactor"],"detaileddescription":[{"para":["TEST::inverse","Calculates the cofactor of the matrix",{"simplesect":[{"$":{"kind":"return"},"para":["cofactor of matrix. "]}]}]}],"description":"TEST::inverse Calculates the cofactor of the matrix [object Object] ","testName":"inverse","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix3x3"},"name":"inverse"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix3x3::adjugate"],"argsstring":["()"],"name":["adjugate"],"detaileddescription":[{"para":["TEST::inverse","Calculates the adjugate of the matrix using transpose for cofactor matrix",{"simplesect":[{"$":{"kind":"return"},"para":["adjugate. "]}]}]}],"description":"TEST::inverse Calculates the adjugate of the matrix using transpose for cofactor matrix [object Object] ","testName":"inverse","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix3x3"},"name":"inverse"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix3x3::inverse"],"argsstring":["()"],"name":["inverse"],"detaileddescription":[{"para":["TEST::inverse","Calculate inverse of matrix. using det * adjugate "]}],"description":"TEST::inverse Calculate inverse of matrix. using det * adjugate  ","testName":"inverse","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix3x3"},"name":"inverse"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix3x3::transpose"],"argsstring":["()"],"name":["transpose"],"detaileddescription":[{"para":["TEST::inverse","Transpose","Invert columns whith rows | A1 | A2 | A3 |T | A1 | B1 | C1 | | B1 | B2 | B3 | = | A2 | B2 | C2 | | C1 | C2 | C3 | | A3 | B3 | C3 | "]}],"description":"TEST::inverse Transpose Invert columns whith rows | A1 | A2 | A3 |T | A1 | B1 | C1 | | B1 | B2 | B3 | = | A2 | B2 | C2 | | C1 | C2 | C3 | | A3 | B3 | C3 |  ","testName":"inverse","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix3x3"},"name":"inverse"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix3x3::identity"],"argsstring":["()"],"name":["identity"],"detaileddescription":[{"para":["TEST::identity","Identity","Tranform matrix to identity "]}],"description":"TEST::identity Identity Tranform matrix to identity  ","testName":"identity","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"identity","status":"run","time":"0","classname":"Matrix3x3"},"name":"identity"},"errorFlag":false},{"type":["float *"],"definition":["float * driderSDK::Matrix3x3::ptr"],"argsstring":["()"],"name":["ptr"],"detaileddescription":[{"para":["TEST::getPointer","Gets a pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A pointer to the first element of the matrix. "]}]}]}],"description":"TEST::getPointer Gets a pointer to the first element of the matrix. [object Object] ","testName":"getPointer","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"getPointer","status":"run","time":"0","classname":"Matrix3x3"},"name":"getPointer"},"errorFlag":false},{"type":["const float *"],"definition":["const float * driderSDK::Matrix3x3::ptr"],"argsstring":["() const"],"name":["ptr"],"detaileddescription":[{"para":["TEST::getPointerConst","Gets a constant pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A constant pointer to the first element of the matrix. "]}]}]}],"description":"TEST::getPointerConst Gets a constant pointer to the first element of the matrix. [object Object] ","testName":"getPointerConst","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"getPointerConst","status":"run","time":"0","classname":"Matrix3x3"},"name":"getPointerConst"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D & driderSDK::Matrix3x3::operator[]"],"argsstring":["(SizeT index)"],"name":["operator[]"],"detaileddescription":[{"para":["TEST::forceInit "]}],"description":"TEST::forceInit  ","testName":"forceInit","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"forceInit","status":"run","time":"0","classname":"Matrix3x3"},"name":"forceInit"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 & driderSDK::Matrix3x3::operator="],"argsstring":["(const Matrix3x3 &A)"],"name":["operator="],"detaileddescription":[{"para":["TEST::operatorEqual "]}],"description":"TEST::operatorEqual  ","testName":"operatorEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorEqual"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 & driderSDK::Matrix3x3::operator="],"argsstring":["(const Matrix4x4 &A)"],"name":["operator="],"detaileddescription":[{"para":["TEST::operatorEqualMatrix4x4 "]}],"description":"TEST::operatorEqualMatrix4x4  ","testName":"operatorEqualMatrix4x4","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorEqualMatrix4x4","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorEqualMatrix4x4"},"errorFlag":false},{"type":[{"ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 driderSDK::Matrix3x3::operator+"],"argsstring":["(const Matrix3x3 &A) const"],"name":["operator+"],"detaileddescription":[{"para":["TEST::operatorAdd "]}],"description":"TEST::operatorAdd  ","testName":"operatorAdd","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorAdd","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorAdd"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 & driderSDK::Matrix3x3::operator+="],"argsstring":["(const Matrix3x3 &A)"],"name":["operator+="],"detaileddescription":[{"para":["TEST::operatorAddEqual "]}],"description":"TEST::operatorAddEqual  ","testName":"operatorAddEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorAddEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorAddEqual"},"errorFlag":false},{"type":[{"ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 driderSDK::Matrix3x3::operator-"],"argsstring":["(const Matrix3x3 &A) const"],"name":["operator-"],"detaileddescription":[{"para":["TEST::operatorMinus "]}],"description":"TEST::operatorMinus  ","testName":"operatorMinus","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMinus","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMinus"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 & driderSDK::Matrix3x3::operator-="],"argsstring":["(const Matrix3x3 &A)"],"name":["operator-="],"detaileddescription":[{"para":["TEST::operatorMinusEqual "]}],"description":"TEST::operatorMinusEqual  ","testName":"operatorMinusEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMinusEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMinusEqual"},"errorFlag":false},{"type":[{"ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 driderSDK::Matrix3x3::operator*"],"argsstring":["(const Matrix3x3 &A) const"],"name":["operator*"],"detaileddescription":[{"para":["TEST::operatorMultiplication "]}],"description":"TEST::operatorMultiplication  ","testName":"operatorMultiplication","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplication","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplication"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 & driderSDK::Matrix3x3::operator*="],"argsstring":["(const Matrix3x3 &A)"],"name":["operator*="],"detaileddescription":[{"para":["TEST::operatorMultiplicationEqual "]}],"description":"TEST::operatorMultiplicationEqual  ","testName":"operatorMultiplicationEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplicationEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplicationEqual"},"errorFlag":false},{"type":[{"ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D driderSDK::Matrix3x3::operator*"],"argsstring":["(const Vector3D &S) const"],"name":["operator*"],"detaileddescription":[{"para":["TEST::operatorMultiplicationForVector3 "]}],"description":"TEST::operatorMultiplicationForVector3  ","testName":"operatorMultiplicationForVector3","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplicationForVector3","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplicationForVector3"},"errorFlag":false},{"type":[{"ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 driderSDK::Matrix3x3::operator*"],"argsstring":["(const float S) const"],"name":["operator*"],"detaileddescription":[{"para":["TEST::operatorMultiplicationFloat "]}],"description":"TEST::operatorMultiplicationFloat  ","testName":"operatorMultiplicationFloat","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplicationFloat","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplicationFloat"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}],"definition":["Matrix3x3 & driderSDK::Matrix3x3::operator*="],"argsstring":["(const float S)"],"name":["operator*="],"detaileddescription":[{"para":["TEST::operatorMultiplicationEqualFloat "]}],"description":"TEST::operatorMultiplicationEqualFloat  ","testName":"operatorMultiplicationEqualFloat","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplicationEqualFloat","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplicationEqualFloat"},"errorFlag":false},{"type":["bool"],"definition":["bool driderSDK::Matrix3x3::operator=="],"argsstring":["(const Matrix3x3 &M)"],"name":["operator=="],"detaileddescription":[{"para":["TEST::operatorEqualEqual "]}],"description":"TEST::operatorEqualEqual  ","testName":"operatorEqualEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorEqualEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorEqualEqual"},"errorFlag":false},{"type":["bool"],"definition":["bool driderSDK::Matrix3x3::operator!="],"argsstring":["(const Matrix3x3 &M)"],"name":["operator!="],"detaileddescription":[{"para":["TEST::operatorNotEqual "]}],"description":"TEST::operatorNotEqual  ","testName":"operatorNotEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorNotEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorNotEqual"},"errorFlag":false}],"testFile":"Nombre del test: Matrix3x3","testClase":{"name":"Matrix3x3","tests":"24","failures":"0","disabled":"0","errors":"0","time":"0.033","testCases":[{"data":{"name":"forceInit","status":"run","time":"0","classname":"Matrix3x3"},"name":"forceInit"},{"data":{"name":"moveConstructor","status":"run","time":"0","classname":"Matrix3x3"},"name":"moveConstructor"},{"data":{"name":"constructForMatrix3x3","status":"run","time":"0","classname":"Matrix3x3"},"name":"constructForMatrix3x3"},{"data":{"name":"constructFor9Floats","status":"run","time":"0","classname":"Matrix3x3"},"name":"constructFor9Floats"},{"data":{"name":"constructFor3Vectors","status":"run","time":"0","classname":"Matrix3x3"},"name":"constructFor3Vectors"},{"data":{"name":"destructor","status":"run","time":"0","classname":"Matrix3x3"},"name":"destructor"},{"data":{"name":"determinant","status":"run","time":"0","classname":"Matrix3x3"},"name":"determinant"},{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix3x3"},"name":"inverse"},{"data":{"name":"identity","status":"run","time":"0","classname":"Matrix3x3"},"name":"identity"},{"data":{"name":"getPointer","status":"run","time":"0","classname":"Matrix3x3"},"name":"getPointer"},{"data":{"name":"getPointerConst","status":"run","time":"0","classname":"Matrix3x3"},"name":"getPointerConst"},{"data":{"name":"operatorEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorEqual"},{"data":{"name":"operatorEqualMatrix4x4","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorEqualMatrix4x4"},{"data":{"name":"operatorAdd","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorAdd"},{"data":{"name":"operatorAddEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorAddEqual"},{"data":{"name":"operatorMinus","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMinus"},{"data":{"name":"operatorMinusEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMinusEqual"},{"data":{"name":"operatorMultiplication","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplication"},{"data":{"name":"operatorMultiplicationEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplicationEqual"},{"data":{"name":"operatorMultiplicationForVector3","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplicationForVector3"},{"data":{"name":"operatorMultiplicationFloat","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplicationFloat"},{"data":{"name":"operatorMultiplicationEqualFloat","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorMultiplicationEqualFloat"},{"data":{"name":"operatorEqualEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorEqualEqual"},{"data":{"name":"operatorNotEqual","status":"run","time":"0","classname":"Matrix3x3"},"name":"operatorNotEqual"}]}},{"name":"Matrix4x4","publicfunctions":[{"type":[""],"definition":["driderSDK::Matrix4x4::Matrix4x4"],"argsstring":["()"],"name":["Matrix4x4"],"detaileddescription":[{"para":["TEST::operatorEqual","Default constructor "]}],"description":"TEST::operatorEqual Default constructor  ","testName":"operatorEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorEqual"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix4x4::Matrix4x4"],"argsstring":["(Math::FORCE_INIT k)"],"name":["Matrix4x4"],"detaileddescription":[{"para":["TEST::forceInit","Default constructor","Values are initialized with 0(kZero) or identity matrix(kIdentity). "]}],"description":"TEST::forceInit Default constructor Values are initialized with 0(kZero) or identity matrix(kIdentity).  ","testName":"forceInit","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"forceInit","status":"run","time":"0","classname":"Matrix4x4"},"name":"forceInit"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix4x4::Matrix4x4"],"argsstring":["(Matrix4x4 &&M)=default"],"name":["Matrix4x4"],"detaileddescription":[{"para":["TEST::moveConstructor","Move constructor "]}],"description":"TEST::moveConstructor Move constructor  ","testName":"moveConstructor","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"moveConstructor","status":"run","time":"0","classname":"Matrix4x4"},"name":"moveConstructor"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix4x4::Matrix4x4"],"argsstring":["(const Matrix4x4 &M)"],"name":["Matrix4x4"],"detaileddescription":[{"para":["TEST::constructForMatrix4x4","Copy constructor "]}],"description":"TEST::constructForMatrix4x4 Copy constructor  ","testName":"constructForMatrix4x4","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"constructForMatrix4x4","status":"run","time":"0","classname":"Matrix4x4"},"name":"constructForMatrix4x4"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix4x4::Matrix4x4"],"argsstring":["(float v0x, float v0y, float v0z, float v0w, float v1x, float v1y, float v1z, float v1w, float v2x, float v2y, float v2z, float v2w, float v3x, float v3y, float v3z, float v3w)"],"name":["Matrix4x4"],"detaileddescription":[{"para":["TEST::constructFor16Floats Initialize constructor with values.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["v0x","v0y","v0z","v0w"]}],"parameterdescription":[{"para":["The x, y, z, w values of the vector, first row"]}]},{"parameternamelist":[{"parametername":["v1x","v1y","v1z","v1w"]}],"parameterdescription":[{"para":["The x, y, z, w values of the vector, second row"]}]},{"parameternamelist":[{"parametername":["v2x","v2y","v2z","v2w"]}],"parameterdescription":[{"para":["The x, y, z, w values of the vector, third row"]}]},{"parameternamelist":[{"parametername":["v3x","v3y","v3z","v3w"]}],"parameterdescription":[{"para":["The x, y, z, w values of the vector, quarter row "]}]}]}]}]}],"description":"TEST::constructFor16Floats Initialize constructor with values. [object Object] ","testName":"constructFor16Floats","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"constructFor16Floats","status":"run","time":"0","classname":"Matrix4x4"},"name":"constructFor16Floats"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix4x4::Matrix4x4"],"argsstring":["(Vector4D vector0, Vector4D vector1, Vector4D vector2, Vector4D vector3)"],"name":["Matrix4x4"],"detaileddescription":[{"para":["TEST::constructFor4Vectors","Initialize constructor with values.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["vector0"]}],"parameterdescription":[{"para":["The vector0(x, y, z, w) values of the vector, first raw"]}]},{"parameternamelist":[{"parametername":["vector1"]}],"parameterdescription":[{"para":["The vector1(x, y, z, w) values of the vector, second raw"]}]},{"parameternamelist":[{"parametername":["vector3"]}],"parameterdescription":[{"para":["The vector2(x, y, z, w) values of the vector, third raw"]}]},{"parameternamelist":[{"parametername":["vector4"]}],"parameterdescription":[{"para":["The vector2(x, y, z, w) values of the vector, quarter raw "]}]}]}]}]}],"description":"TEST::constructFor4Vectors Initialize constructor with values. [object Object] ","testName":"constructFor4Vectors","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"constructFor4Vectors","status":"run","time":"0","classname":"Matrix4x4"},"name":"constructFor4Vectors"},"errorFlag":false},{"type":[""],"definition":["driderSDK::Matrix4x4::~Matrix4x4"],"argsstring":["()"],"name":["~Matrix4x4"],"detaileddescription":[{"para":["TEST::destructor","Destructor","Default destructor "]}],"description":"TEST::destructor Destructor Default destructor  ","testName":"destructor","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"destructor","status":"run","time":"0","classname":"Matrix4x4"},"name":"destructor"},"errorFlag":false},{"type":["float"],"definition":["float driderSDK::Matrix4x4::determinant"],"argsstring":["() const"],"name":["determinant"],"detaileddescription":[{"para":["TEST::determinant","Calculates the determinant of the matrix",{"simplesect":[{"$":{"kind":"return"},"para":["determinant. "]}]}]}],"description":"TEST::determinant Calculates the determinant of the matrix [object Object] ","testName":"determinant","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"determinant","status":"run","time":"0","classname":"Matrix4x4"},"name":"determinant"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix4x4::cofactor"],"argsstring":["()"],"name":["cofactor"],"detaileddescription":[{"para":["TEST::inverse","Calculates the cofactor of the matrix",{"simplesect":[{"$":{"kind":"return"},"para":["cofactor of matrix. "]}]}]}],"description":"TEST::inverse Calculates the cofactor of the matrix [object Object] ","testName":"inverse","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix4x4"},"name":"inverse"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix4x4::adjugate"],"argsstring":["()"],"name":["adjugate"],"detaileddescription":[{"para":["TEST::inverse","Calculates the adjugate of the matrix using transpose for cofactor matrix",{"simplesect":[{"$":{"kind":"return"},"para":["adjugate. "]}]}]}],"description":"TEST::inverse Calculates the adjugate of the matrix using transpose for cofactor matrix [object Object] ","testName":"inverse","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix4x4"},"name":"inverse"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix4x4::inverse"],"argsstring":["()"],"name":["inverse"],"detaileddescription":[{"para":["TEST::inverse","Calculate inverse of matrix. using det * adjugate "]}],"description":"TEST::inverse Calculate inverse of matrix. using det * adjugate  ","testName":"inverse","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix4x4"},"name":"inverse"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix4x4::transpose"],"argsstring":["()"],"name":["transpose"],"detaileddescription":[{"para":["TEST::inverse","Transpose","Invert columns whith rows | A1 | A2 | A3 | A4 |T | A1 | B1 | C1 | D1 | | B1 | B2 | B3 | B4 | | A2 | B2 | C2 | D2 | | C1 | C2 | C3 | C4 | = | A3 | B3 | C3 | D3 | | D1 | D2 | D3 | C4 | | A4 | B4 | C4 | D4 | "]}],"description":"TEST::inverse Transpose Invert columns whith rows | A1 | A2 | A3 | A4 |T | A1 | B1 | C1 | D1 | | B1 | B2 | B3 | B4 | | A2 | B2 | C2 | D2 | | C1 | C2 | C3 | C4 | = | A3 | B3 | C3 | D3 | | D1 | D2 | D3 | C4 | | A4 | B4 | C4 | D4 |  ","testName":"inverse","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix4x4"},"name":"inverse"},"errorFlag":false},{"type":["void"],"definition":["void driderSDK::Matrix4x4::identity"],"argsstring":["()"],"name":["identity"],"detaileddescription":[{"para":["TEST::identity","Identity","Tranform matrix to identity "]}],"description":"TEST::identity Identity Tranform matrix to identity  ","testName":"identity","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"identity","status":"run","time":"0","classname":"Matrix4x4"},"name":"identity"},"errorFlag":false},{"type":["float *"],"definition":["float * driderSDK::Matrix4x4::ptr"],"argsstring":["()"],"name":["ptr"],"detaileddescription":[{"para":["TEST::getPointer","Gets a pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A pointer to the first element of the matrix. "]}]}]}],"description":"TEST::getPointer Gets a pointer to the first element of the matrix. [object Object] ","testName":"getPointer","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"getPointer","status":"run","time":"0","classname":"Matrix4x4"},"name":"getPointer"},"errorFlag":false},{"type":["const float *"],"definition":["const float * driderSDK::Matrix4x4::ptr"],"argsstring":["() const"],"name":["ptr"],"detaileddescription":[{"para":["TEST::getPointerConst","Gets a constant pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A constant pointer to the first element of the matrix. "]}]}]}],"description":"TEST::getPointerConst Gets a constant pointer to the first element of the matrix. [object Object] ","testName":"getPointerConst","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"getPointerConst","status":"run","time":"0","classname":"Matrix4x4"},"name":"getPointerConst"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D & driderSDK::Matrix4x4::operator[]"],"argsstring":["(SizeT index)"],"name":["operator[]"],"detaileddescription":[{"para":["TEST::forceInit "]}],"description":"TEST::forceInit  ","testName":"forceInit","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"forceInit","status":"run","time":"0","classname":"Matrix4x4"},"name":"forceInit"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 & driderSDK::Matrix4x4::operator="],"argsstring":["(const Matrix4x4 &A)"],"name":["operator="],"detaileddescription":[{"para":["TEST::operatorEqual "]}],"description":"TEST::operatorEqual  ","testName":"operatorEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorEqual"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 & driderSDK::Matrix4x4::operator="],"argsstring":["(const Matrix3x3 &A)"],"name":["operator="],"detaileddescription":[{"para":["TEST::operatorEqualMatrix3x3 "]}],"description":"TEST::operatorEqualMatrix3x3  ","testName":"operatorEqualMatrix3x3","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorEqualMatrix3x3","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorEqualMatrix3x3"},"errorFlag":false},{"type":[{"ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 driderSDK::Matrix4x4::operator+"],"argsstring":["(const Matrix4x4 &A) const"],"name":["operator+"],"detaileddescription":[{"para":["TEST::operatorAdd "]}],"description":"TEST::operatorAdd  ","testName":"operatorAdd","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorAdd","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorAdd"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 & driderSDK::Matrix4x4::operator+="],"argsstring":["(const Matrix4x4 &A)"],"name":["operator+="],"detaileddescription":[{"para":["TEST::operatorAddEqual "]}],"description":"TEST::operatorAddEqual  ","testName":"operatorAddEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorAddEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorAddEqual"},"errorFlag":false},{"type":[{"ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 driderSDK::Matrix4x4::operator-"],"argsstring":["(const Matrix4x4 &A) const"],"name":["operator-"],"detaileddescription":[{"para":["TEST::operatorMinus "]}],"description":"TEST::operatorMinus  ","testName":"operatorMinus","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMinus","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMinus"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 & driderSDK::Matrix4x4::operator-="],"argsstring":["(const Matrix4x4 &A)"],"name":["operator-="],"detaileddescription":[{"para":["TEST::operatorMinusEqual "]}],"description":"TEST::operatorMinusEqual  ","testName":"operatorMinusEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMinusEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMinusEqual"},"errorFlag":false},{"type":[{"ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 driderSDK::Matrix4x4::operator*"],"argsstring":["(const Matrix4x4 &A) const"],"name":["operator*"],"detaileddescription":[{"para":["TEST::operatorMultiplication "]}],"description":"TEST::operatorMultiplication  ","testName":"operatorMultiplication","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplication","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplication"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 & driderSDK::Matrix4x4::operator*="],"argsstring":["(const Matrix4x4 &A)"],"name":["operator*="],"detaileddescription":[{"para":["TEST::operatorMultiplicationEqual "]}],"description":"TEST::operatorMultiplicationEqual  ","testName":"operatorMultiplicationEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplicationEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplicationEqual"},"errorFlag":false},{"type":[{"ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D driderSDK::Matrix4x4::operator*"],"argsstring":["(const Vector4D &S) const"],"name":["operator*"],"detaileddescription":[{"para":["TEST::operatorMultiplicationForVector4 "]}],"description":"TEST::operatorMultiplicationForVector4  ","testName":"operatorMultiplicationForVector4","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplicationForVector4","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplicationForVector4"},"errorFlag":false},{"type":[{"ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 driderSDK::Matrix4x4::operator*"],"argsstring":["(const float S) const"],"name":["operator*"],"detaileddescription":[{"para":["TEST::operatorMultiplicationFloat "]}],"description":"TEST::operatorMultiplicationFloat  ","testName":"operatorMultiplicationFloat","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplicationFloat","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplicationFloat"},"errorFlag":false},{"type":[{"_":" &","ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}],"definition":["Matrix4x4 & driderSDK::Matrix4x4::operator*="],"argsstring":["(const float S)"],"name":["operator*="],"detaileddescription":[{"para":["TEST::operatorMultiplicationEqualFloat "]}],"description":"TEST::operatorMultiplicationEqualFloat  ","testName":"operatorMultiplicationEqualFloat","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorMultiplicationEqualFloat","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplicationEqualFloat"},"errorFlag":false},{"type":["bool"],"definition":["bool driderSDK::Matrix4x4::operator=="],"argsstring":["(const Matrix4x4 &M)"],"name":["operator=="],"detaileddescription":[{"para":["TEST::operatorEqualEqual "]}],"description":"TEST::operatorEqualEqual  ","testName":"operatorEqualEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorEqualEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorEqualEqual"},"errorFlag":false},{"type":["bool"],"definition":["bool driderSDK::Matrix4x4::operator!="],"argsstring":["(const Matrix4x4 &M)"],"name":["operator!="],"detaileddescription":[{"para":["TEST::operatorNotEqual "]}],"description":"TEST::operatorNotEqual  ","testName":"operatorNotEqual","statusTest":"TestCase Encontrado","resultTest":"Prueba Correcta","test":{"data":{"name":"operatorNotEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorNotEqual"},"errorFlag":false}],"testFile":"Nombre del test: Matrix4x4","testClase":{"name":"Matrix4x4","tests":"24","failures":"0","disabled":"0","errors":"0","time":"0.02","testCases":[{"data":{"name":"forceInit","status":"run","time":"0","classname":"Matrix4x4"},"name":"forceInit"},{"data":{"name":"moveConstructor","status":"run","time":"0","classname":"Matrix4x4"},"name":"moveConstructor"},{"data":{"name":"constructForMatrix4x4","status":"run","time":"0","classname":"Matrix4x4"},"name":"constructForMatrix4x4"},{"data":{"name":"constructFor16Floats","status":"run","time":"0","classname":"Matrix4x4"},"name":"constructFor16Floats"},{"data":{"name":"constructFor4Vectors","status":"run","time":"0","classname":"Matrix4x4"},"name":"constructFor4Vectors"},{"data":{"name":"destructor","status":"run","time":"0","classname":"Matrix4x4"},"name":"destructor"},{"data":{"name":"determinant","status":"run","time":"0","classname":"Matrix4x4"},"name":"determinant"},{"data":{"name":"inverse","status":"run","time":"0","classname":"Matrix4x4"},"name":"inverse"},{"data":{"name":"identity","status":"run","time":"0","classname":"Matrix4x4"},"name":"identity"},{"data":{"name":"getPointer","status":"run","time":"0","classname":"Matrix4x4"},"name":"getPointer"},{"data":{"name":"getPointerConst","status":"run","time":"0","classname":"Matrix4x4"},"name":"getPointerConst"},{"data":{"name":"operatorEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorEqual"},{"data":{"name":"operatorEqualMatrix3x3","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorEqualMatrix3x3"},{"data":{"name":"operatorAdd","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorAdd"},{"data":{"name":"operatorAddEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorAddEqual"},{"data":{"name":"operatorMinus","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMinus"},{"data":{"name":"operatorMinusEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMinusEqual"},{"data":{"name":"operatorMultiplication","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplication"},{"data":{"name":"operatorMultiplicationEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplicationEqual"},{"data":{"name":"operatorMultiplicationForVector4","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplicationForVector4"},{"data":{"name":"operatorMultiplicationFloat","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplicationFloat"},{"data":{"name":"operatorMultiplicationEqualFloat","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorMultiplicationEqualFloat"},{"data":{"name":"operatorEqualEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorEqualEqual"},{"data":{"name":"operatorNotEqual","status":"run","time":"0","classname":"Matrix4x4"},"name":"operatorNotEqual"}]}},{"name":"MatrixNxM","publicfunctions":[{"type":[""],"definition":["driderSDK::MatrixNxM< _rows, _cols >::MatrixNxM"],"argsstring":["()"],"name":["MatrixNxM"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::MatrixNxM< _rows, _cols >::MatrixNxM"],"argsstring":["(float _scalar)"],"name":["MatrixNxM"],"detaileddescription":[{"para":["Constructor using a scalar value.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["_scalar"]}],"parameterdescription":[{"para":["All the elements of the matrix are initialized to this value. "]}]}]}]}]}],"description":"Constructor using a scalar value. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::MatrixNxM< _rows, _cols >::MatrixNxM"],"argsstring":["(const VectorN< _cols > &_vec)"],"name":["MatrixNxM"],"detaileddescription":[{"para":["Constructor using a vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["_vec"]}],"parameterdescription":[{"para":["All the rows of the matrix are initialized to this vector. "]}]}]}]}]}],"description":"Constructor using a vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE < _cols > &","ref":[{"_":"VectorN","$":{"refid":"classdrider_s_d_k_1_1_vector_n","kindref":"compound"}}]}],"definition":["FORCEINLINE VectorN<_cols>& driderSDK::MatrixNxM< _rows, _cols >::operator[]"],"argsstring":["(SizeT row)"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a reference to the specified row (Vector) from the matrix.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["row"]}],"parameterdescription":[{"para":["The index of the row."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the row is greater than number of rows in the matrix. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to the element at the [row] position."]}]}]}],"description":"Gets a reference to the specified row (Vector) from the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE const < _cols > &","ref":[{"_":"VectorN","$":{"refid":"classdrider_s_d_k_1_1_vector_n","kindref":"compound"}}]}],"definition":["FORCEINLINE const VectorN<_cols>& driderSDK::MatrixNxM< _rows, _cols >::operator[]"],"argsstring":["(SizeT row) const"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a const reference to the specified row (Vector) from the matrix.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["row"]}],"parameterdescription":[{"para":["The index of the row."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the row is greater than number of rows in the matrix. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [row] position."]}]}]}],"description":"Gets a const reference to the specified row (Vector) from the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE SizeT"],"definition":["FORCEINLINE SizeT driderSDK::MatrixNxM< _rows, _cols >::rows"],"argsstring":["() const"],"name":["rows"],"detaileddescription":[{"para":["Gets the number of rows in the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["The number of rows in the matrix. "]}]}]}],"description":"Gets the number of rows in the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE SizeT"],"definition":["FORCEINLINE SizeT driderSDK::MatrixNxM< _rows, _cols >::cols"],"argsstring":["() const"],"name":["cols"],"detaileddescription":[{"para":["Gets the number of columns in the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["The number of columns in the matrix. "]}]}]}],"description":"Gets the number of columns in the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE < _cols, _rows >","ref":[{"_":"MatrixNxM","$":{"refid":"classdrider_s_d_k_1_1_matrix_nx_m","kindref":"compound"}}]}],"definition":["FORCEINLINE MatrixNxM<_cols, _rows> driderSDK::MatrixNxM< _rows, _cols >::transpose"],"argsstring":["() const"],"name":["transpose"],"detaileddescription":[{"para":["Gets the transposed matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["The matrix transposed. "]}]}]}],"description":"Gets the transposed matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE float *"],"definition":["FORCEINLINE float* driderSDK::MatrixNxM< _rows, _cols >::ptr"],"argsstring":["()"],"name":["ptr"],"detaileddescription":[{"para":["Gets a pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A pointer to the first element of the matrix. "]}]}]}],"description":"Gets a pointer to the first element of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE const float *"],"definition":["FORCEINLINE const float* driderSDK::MatrixNxM< _rows, _cols >::ptr"],"argsstring":["() const"],"name":["ptr"],"detaileddescription":[{"para":["Gets a constant pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A constant pointer to the first element of the matrix. "]}]}]}],"description":"Gets a constant pointer to the first element of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE  &","ref":[{"_":"MatrixNxM","$":{"refid":"classdrider_s_d_k_1_1_matrix_nx_m","kindref":"compound"}}]}],"definition":["FORCEINLINE MatrixNxM& driderSDK::MatrixNxM< _rows, _cols >::operator*="],"argsstring":["(float scalar)"],"name":["operator*="],"detaileddescription":[{"para":["Overload of binary operator *=.","This overload performs the multiplication assignment by scalar to each row of the matrix.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Right side operand (a scalar)"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to (*this). "]}]}]}],"description":"Overload of binary operator *=. This overload performs the multiplication assignment by scalar to each row of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE  &","ref":[{"_":"MatrixNxM","$":{"refid":"classdrider_s_d_k_1_1_matrix_nx_m","kindref":"compound"}}]}],"definition":["FORCEINLINE MatrixNxM& driderSDK::MatrixNxM< _rows, _cols >::operator/="],"argsstring":["(float scalar)"],"name":["operator/="],"detaileddescription":[{"para":["Overload of binary operator /=.","This overload performs the division assignment by scalar to each row of the matrix.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Right side operand (a scalar)"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to (*this). "]}]}]}],"description":"Overload of binary operator /=. This overload performs the division assignment by scalar to each row of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE < _rows >","ref":[{"_":"VectorN","$":{"refid":"classdrider_s_d_k_1_1_vector_n","kindref":"compound"}}]}],"definition":["FORCEINLINE VectorN<_rows> driderSDK::MatrixNxM< _rows, _cols >::operator*"],"argsstring":["(const VectorN< _cols > &rhs)"],"name":["operator*"],"detaileddescription":[{"para":["Overload of binary operator *.","This overload performs the matrix-vector product.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["rhs"]}],"parameterdescription":[{"para":["Right side operand (a vector with M (number of _cols of (*this)) elements."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The transformed vector. "]}]}]}],"description":"Overload of binary operator *. This overload performs the matrix-vector product. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE bool"],"definition":["FORCEINLINE bool driderSDK::MatrixNxM< _rows, _cols >::operator=="],"argsstring":["(const MatrixNxM &rhs)"],"name":["operator=="],"detaileddescription":[{"para":["Overload of binary operator ==.","This overload performs a memberwise equality comparision.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["rhs"]}],"parameterdescription":[{"para":["Right operand (a matrice of the same size with which the rows are compared)."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if all rows of *this matrix are equal to all rows of rhs matrix, false otherwise. "]}]}]}],"description":"Overload of binary operator ==. This overload performs a memberwise equality comparision. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE bool"],"definition":["FORCEINLINE bool driderSDK::MatrixNxM< _rows, _cols >::operator!="],"argsstring":["(const MatrixNxM &rhs)"],"name":["operator!="],"detaileddescription":[{"para":["Overload of binary operator ==.","This overload performs a memberwise inequality comparision.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["rhs"]}],"parameterdescription":[{"para":["Right operand (a matrice of the same size with which the rows are compared)."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if a row of *this matrix is unequal to a row of rhs matrix, false otherwise. "]}]}]}],"description":"Overload of binary operator ==. This overload performs a memberwise inequality comparision. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Module","publicfunctions":[{"type":[""],"definition":["driderSDK::Module< T >::Module"],"argsstring":["()"],"name":["Module"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["virtual driderSDK::Module< T >::~Module"],"argsstring":["()"],"name":["~Module"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Module< T >::Module"],"argsstring":["(const Module &)"],"name":["Module"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Module","$":{"refid":"classdrider_s_d_k_1_1_module","kindref":"compound"}}]}],"definition":["Module& driderSDK::Module< T >::operator="],"argsstring":["(const Module &)"],"name":["operator="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["virtual void driderSDK::Module< T >::onStartUp"],"argsstring":["()"],"name":["onStartUp"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["virtual void driderSDK::Module< T >::onShutDown"],"argsstring":["()"],"name":["onShutDown"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Parser","publicfunctions":[],"testFile":"No existe Test con el nombre de la clase"},{"name":"Plane","publicfunctions":[{"type":[""],"definition":["driderSDK::Plane::Plane"],"argsstring":["()"],"name":["Plane"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Plane::Plane"],"argsstring":["(const Vector3D &_normal, float _d)"],"name":["Plane"],"detaileddescription":[{"para":["Constructor which takes a normal and a gap . "]}],"description":"Constructor which takes a normal and a gap .  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Plane::Plane"],"argsstring":["(const Vector3D &_normal, const Vector3D &point)"],"name":["Plane"],"detaileddescription":[{"para":["Constructor using a normal and a point to calculate the gap. "]}],"description":"Constructor using a normal and a point to calculate the gap.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Plane::Plane"],"argsstring":["(const Vector3D &point0, const Vector3D &point1, const Vector3D &point2)"],"name":["Plane"],"detaileddescription":[{"para":["Constructor using 3 points in the plane which are used to calculate the normal of the plane and the gap. "]}],"description":"Constructor using 3 points in the plane which are used to calculate the normal of the plane and the gap.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Plane::Plane"],"argsstring":["(const Plane &other)"],"name":["Plane"],"detaileddescription":[{"para":["Copy constructor "]}],"description":"Copy constructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Plane::compute"],"argsstring":["(const Vector3D &point0, const Vector3D &point1, const Vector3D &point2)"],"name":["compute"],"detaileddescription":[{"para":["Computes the normal and gap of the plain from 3 points. "]}],"description":"Computes the normal and gap of the plain from 3 points.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Plane::~Plane"],"argsstring":["()"],"name":["~Plane"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Plane::compute"],"argsstring":["(const Vector3D &_normal, const Vector3D &point)"],"name":["compute"],"detaileddescription":[{"para":["Computes the normal and gap of the plain from a normal and 1 point. "]}],"description":"Computes the normal and gap of the plain from a normal and 1 point.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Plane::distanceToPoint"],"argsstring":["(const Vector3D &point)"],"name":["distanceToPoint"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["PLANE_INTERSECT::E"],"definition":["PLANE_INTERSECT::E driderSDK::Plane::intersects"],"argsstring":["(const Vector3D &point)"],"name":["intersects"],"detaileddescription":[{"para":["Computes the relationship between a point and the plane.",{"simplesect":[{"$":{"kind":"return"},"para":["The relationship of the point with the plane. "]}]}]}],"description":"Computes the relationship between a point and the plane. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::intersects"],"argsstring":["(const Plane &other)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::intersects"],"argsstring":["(const Plane &other, Line &intersectionLine)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::intersects"],"argsstring":["(const Sphere &sphere)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::intersects"],"argsstring":["(const AABB &aabb)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::intersects"],"argsstring":["(const Capsule &capsule)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::intersects"],"argsstring":["(const Frustrum &frustrum)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::intersects"],"argsstring":["(const Ray &ray)"],"name":["intersects"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::intersects"],"argsstring":["(const Ray &ray, float &intersection)"],"name":["intersects"],"detaileddescription":[{"para":["Checks if a ray intersects with the plane.",{"_":"\nintersection The intersection point parameter.","parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["ray"]}],"parameterdescription":[{"para":["The ray to check the intersecton."]}]}]}]},{"simplesect":[{"$":{"kind":"return"},"para":["True if the ray intersects with the plane, false otherwise. "]}]}]}],"description":"Checks if a ray intersects with the plane. [object Object] [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Plane::normalize"],"argsstring":["()"],"name":["normalize"],"detaileddescription":[{"para":["Normalizes the plane. This modifies the normal and the gap. "]}],"description":"Normalizes the plane. This modifies the normal and the gap.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Plane","$":{"refid":"classdrider_s_d_k_1_1_plane","kindref":"compound"}}]}],"definition":["Plane & driderSDK::Plane::operator="],"argsstring":["(const Plane &other)"],"name":["operator="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::operator=="],"argsstring":["(const Plane &rhs)"],"name":["operator=="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Plane::operator!="],"argsstring":["(const Plane &rhs)"],"name":["operator!="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Polygon","publicfunctions":[],"testFile":"No existe Test con el nombre de la clase"},{"name":"Pool","publicfunctions":[{"type":[""],"definition":["driderSDK::Pool< T, poolSize >::Pool"],"argsstring":["()"],"name":["Pool"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["T *"],"definition":["T* driderSDK::Pool< T, poolSize >::aquire"],"argsstring":["()"],"name":["aquire"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Quaternion","publicfunctions":[{"type":[""],"definition":["driderSDK::Quaternion::Quaternion"],"argsstring":["()"],"name":["Quaternion"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Quaternion::Quaternion"],"argsstring":["(Math::FORCE_INIT k)"],"name":["Quaternion"],"detaileddescription":[{"para":["Default constructor",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["k"]}],"parameterdescription":[{"para":["Values are initialized with 0(kZero) or identity quaternion(kIdentity) "]}]}]}]}]}],"description":"Default constructor [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Quaternion::Quaternion"],"argsstring":["(Quaternion &&Q)=default"],"name":["Quaternion"],"detaileddescription":[{"para":["Move constructor. "]}],"description":"Move constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Quaternion::Quaternion"],"argsstring":["(const Quaternion &Q)"],"name":["Quaternion"],"detaileddescription":[{"para":["Copy constructor. "]}],"description":"Copy constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Quaternion::Quaternion"],"argsstring":["(float _x, float _y, float _z, float _w)"],"name":["Quaternion"],"detaileddescription":[{"para":["Initialize the constructor with the given values.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["_x"]}],"parameterdescription":[{"para":["The x value of the quaternion."]}]},{"parameternamelist":[{"parametername":["_y"]}],"parameterdescription":[{"para":["The y value of the quaternion."]}]},{"parameternamelist":[{"parametername":["_z"]}],"parameterdescription":[{"para":["The z value of the quaternion."]}]},{"parameternamelist":[{"parametername":["_w"]}],"parameterdescription":[{"para":["The w value of the quaternion. "]}]}]}]}]}],"description":"Initialize the constructor with the given values. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Quaternion::Quaternion"],"argsstring":["(const Vector4D &V)"],"name":["Quaternion"],"detaileddescription":[{"para":["Initialize the constructor with a vector4D",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["V"]}],"parameterdescription":[{"para":["The vector to construct the quaternion "]}]}]}]}]}],"description":"Initialize the constructor with a vector4D [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Quaternion::~Quaternion"],"argsstring":["()"],"name":["~Quaternion"],"detaileddescription":[{"para":["Default destructor. "]}],"description":"Default destructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Quaternion::measure"],"argsstring":["()"],"name":["measure"],"detaileddescription":[{"para":["Computes the measure of the quaternion.",{"simplesect":[{"$":{"kind":"return"},"para":[{"_":"'s lenght. ","ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}]}]}]}],"description":"Computes the measure of the quaternion. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion driderSDK::Quaternion::conjugate"],"argsstring":["()"],"name":["conjugate"],"detaileddescription":[{"para":["Computes the conjugate of the quaternion.",{"simplesect":[{"$":{"kind":"return"},"para":["The conjugate quaternion. "]}]}]}],"description":"Computes the conjugate of the quaternion. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Quaternion::normalize"],"argsstring":["()"],"name":["normalize"],"detaileddescription":[{"para":["Normalize the quaternion. "]}],"description":"Normalize the quaternion.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion driderSDK::Quaternion::rotation"],"argsstring":["(float theta, const Quaternion &A)"],"name":["rotation"],"detaileddescription":[{"para":["Rotates the quaternion given theta and another quaternion.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["theta"]}],"parameterdescription":[{"para":["Angle of rotation."]}]},{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The other quaternion to generate an axis."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A rotated quaternion. "]}]}]}],"description":"Rotates the quaternion given theta and another quaternion. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Quaternion::matrixFromQuaternion"],"argsstring":["(Matrix4x4 &MatrixOut)"],"name":["matrixFromQuaternion"],"detaileddescription":[{"para":["Creates a 4D matrix from the quaternion.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["MatrixOut"]}],"parameterdescription":[{"para":[{"_":" to be filled. ","ref":[{"_":"Matrix4x4","$":{"refid":"classdrider_s_d_k_1_1_matrix4x4","kindref":"compound"}}]}]}]}]}]}]}],"description":"Creates a 4D matrix from the quaternion. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Quaternion::matrixFromQuaternion"],"argsstring":["(Matrix3x3 &MatrixOut)"],"name":["matrixFromQuaternion"],"detaileddescription":[{"para":["Creates a 3D matrix from the quaternion.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["MatrixOut"]}],"parameterdescription":[{"para":[{"_":" to be filled. ","ref":[{"_":"Matrix3x3","$":{"refid":"classdrider_s_d_k_1_1_matrix3x3","kindref":"compound"}}]}]}]}]}]}]}],"description":"Creates a 3D matrix from the quaternion. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float *"],"definition":["float * driderSDK::Quaternion::ptr"],"argsstring":["()"],"name":["ptr"],"detaileddescription":[{"para":["Gets a pointer to the first element of the quaternion.",{"simplesect":[{"$":{"kind":"return"},"para":["A pointer to the first element. "]}]}]}],"description":"Gets a pointer to the first element of the quaternion. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float *"],"definition":["const float * driderSDK::Quaternion::ptr"],"argsstring":["() const"],"name":["ptr"],"detaileddescription":[{"para":["Gets a constant pointer to the first element of the quaternion.",{"simplesect":[{"$":{"kind":"return"},"para":["A constant pointer to the first element. "]}]}]}],"description":"Gets a constant pointer to the first element of the quaternion. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float &"],"definition":["float & driderSDK::Quaternion::operator[]"],"argsstring":["(const SizeT index)"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a reference to a specific element of the quaternion.",{"simplesect":[{"$":{"kind":"return"},"para":["Reference to an element of the quaternion. "]}]}]}],"description":"Gets a reference to a specific element of the quaternion. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float &"],"definition":["const float & driderSDK::Quaternion::operator[]"],"argsstring":["(const SizeT index) const"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a constant reference to a specific element of the quaternion.",{"simplesect":[{"$":{"kind":"return"},"para":["Constant reference to an element of the quaternion. "]}]}]}],"description":"Gets a constant reference to a specific element of the quaternion. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion driderSDK::Quaternion::operator+"],"argsstring":["(const Quaternion &Q) const"],"name":["operator+"],"detaileddescription":[{"para":["Adds two quaternions.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The other quaternion."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The result quaternion of the operation. "]}]}]}],"description":"Adds two quaternions. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion & driderSDK::Quaternion::operator+="],"argsstring":["(const Quaternion &Q)"],"name":["operator+="],"detaileddescription":[{"para":["Adds two quaternions and stores the result in this quaternion",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The other quaternion."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this quaternion "]}]}]}],"description":"Adds two quaternions and stores the result in this quaternion [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion driderSDK::Quaternion::operator-"],"argsstring":["(const Quaternion &Q) const"],"name":["operator-"],"detaileddescription":[{"para":["Substracts two quaternions.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The other quaternion."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The result quaternion of the operation. "]}]}]}],"description":"Substracts two quaternions. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion & driderSDK::Quaternion::operator-="],"argsstring":["(const Quaternion &Q)"],"name":["operator-="],"detaileddescription":[{"para":["Substracts two quaternions and stores the result in this quaternion",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The other quaternion."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this quaternion "]}]}]}],"description":"Substracts two quaternions and stores the result in this quaternion [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion driderSDK::Quaternion::operator*"],"argsstring":["(const Quaternion &Q) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies two quaternions.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The other quaternion."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The result quaternion of the operation. "]}]}]}],"description":"Multiplies two quaternions. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion driderSDK::Quaternion::operator*"],"argsstring":["(float s) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies quaternion with an scalar.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["s"]}],"parameterdescription":[{"para":["The value to operate with."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The result quaternion of the operation. "]}]}]}],"description":"Multiplies quaternion with an scalar. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion & driderSDK::Quaternion::operator*="],"argsstring":["(const Quaternion &Q)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies two quaternions and stores the result in this quaternion",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The other quaternion."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this quaternion "]}]}]}],"description":"Multiplies two quaternions and stores the result in this quaternion [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion & driderSDK::Quaternion::operator*="],"argsstring":["(float s)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies quaternion with an scalar and stores the result in this quaternion",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["s"]}],"parameterdescription":[{"para":["The value to operate with."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this quaternion "]}]}]}],"description":"Multiplies quaternion with an scalar and stores the result in this quaternion [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion driderSDK::Quaternion::operator/"],"argsstring":["(const Quaternion &Q) const"],"name":["operator/"],"detaileddescription":[{"para":["Divides two quaternions.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The other quaternion."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The result quaternion of the operation. "]}]}]}],"description":"Divides two quaternions. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion & driderSDK::Quaternion::operator/="],"argsstring":["(const Quaternion &Q)"],"name":["operator/="],"detaileddescription":[{"para":["Divides two quaternions and stores the result in this quaternion",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The other quaternion."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this quaternion "]}]}]}],"description":"Divides two quaternions and stores the result in this quaternion [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion & driderSDK::Quaternion::operator="],"argsstring":["(const Quaternion &Q)"],"name":["operator="],"detaileddescription":[{"para":["Assigns the values from another quaternion",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The quaternion to take the values from."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this quaternion "]}]}]}],"description":"Assigns the values from another quaternion [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Quaternion::operator=="],"argsstring":["(const Quaternion &Q)"],"name":["operator=="],"detaileddescription":[{"para":["Checks if quaternion is equal to another quaternion",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The quaternion to compare."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if it is equal "]}]}]}],"description":"Checks if quaternion is equal to another quaternion [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Quaternion::operator!="],"argsstring":["(const Quaternion &Q)"],"name":["operator!="],"detaileddescription":[{"para":["Checks if quaternion is not equal to another quaternion",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["Q"]}],"parameterdescription":[{"para":["The quaternion to compare."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if it is not equal "]}]}]}],"description":"Checks if quaternion is not equal to another quaternion [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Quaternion","$":{"refid":"classdrider_s_d_k_1_1_quaternion","kindref":"compound"}}]}],"definition":["Quaternion driderSDK::Quaternion::operator-"],"argsstring":["() const"],"name":["operator-"],"detaileddescription":[{"para":["Returns this quaternion with negated values. "]}],"description":"Returns this quaternion with negated values.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"Nombre del test: Quaternion","testClase":{"name":"Quaternion","tests":"26","failures":"5","disabled":"0","errors":"0","time":"0.032","testCases":[{"data":{"name":"forceInitZero","status":"run","time":"0","classname":"Quaternion"},"name":"forceInitZero"},{"data":{"name":"forceInitIdentity","status":"run","time":"0","classname":"Quaternion"},"name":"forceInitIdentity"},{"data":{"name":"constructFromQuaternion","status":"run","time":"0","classname":"Quaternion"},"name":"constructFromQuaternion"},{"data":{"name":"constructFrom4floats","status":"run","time":"0","classname":"Quaternion"},"name":"constructFrom4floats"},{"data":{"name":"constructFromVector4D","status":"run","time":"0","classname":"Quaternion"},"name":"constructFromVector4D"},{"data":{"name":"measure","status":"run","time":"0","classname":"Quaternion"},"name":"measure"},{"data":{"name":"conjugate","status":"run","time":"0","classname":"Quaternion"},"name":"conjugate"},{"data":{"name":"normalize","status":"run","time":"0","classname":"Quaternion"},"name":"normalize"},{"data":{"name":"rotation","status":"run","time":"0.003","classname":"Quaternion"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:13\r\n      Expected: TestQuaternion.x\r\n      Which is: 0\r\nTo be equal to: x\r\n      Which is: 1","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:13\n      Expected: TestQuaternion.x\n      Which is: 0\nTo be equal to: x\n      Which is: 1","type":""}},{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:15\r\n      Expected: TestQuaternion.z\r\n      Which is: 1\r\nTo be equal to: z\r\n      Which is: 0","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:15\n      Expected: TestQuaternion.z\n      Which is: 1\nTo be equal to: z\n      Which is: 0","type":""}}],"name":"rotation"},{"data":{"name":"matrixFromQuaternion4x4","status":"run","time":"0.001","classname":"Quaternion"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:83\r\n      Expected: Result[0][0]\r\n      Which is: 0.44680852\r\nTo be equal to: TestMatrix4[0][0]\r\n      Which is: -25","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:83\n      Expected: Result[0][0]\n      Which is: 0.44680852\nTo be equal to: TestMatrix4[0][0]\n      Which is: -25","type":""}},{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:84\r\n      Expected: Result[0][1]\r\n      Which is: -0.04255319\r\nTo be equal to: TestMatrix4[0][1]\r\n      Which is: -0.042553157","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:84\n      Expected: Result[0][1]\n      Which is: -0.04255319\nTo be equal to: TestMatrix4[0][1]\n      Which is: -0.042553157","type":""}}],"name":"matrixFromQuaternion4x4"},{"data":{"name":"matrixFromQuaternion3x3","status":"run","time":"0","classname":"Quaternion"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:113\r\n      Expected: Result[0][0]\r\n      Which is: 0.60000002\r\nTo be equal to: TestMatrix3[0][0]\r\n      Which is: -0.112","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:113\n      Expected: Result[0][0]\n      Which is: 0.60000002\nTo be equal to: TestMatrix3[0][0]\n      Which is: -0.112","type":""}}],"name":"matrixFromQuaternion3x3"},{"data":{"name":"operatorBrackets","status":"run","time":"0","classname":"Quaternion"},"name":"operatorBrackets"},{"data":{"name":"operatorAdd","status":"run","time":"0.001","classname":"Quaternion"},"name":"operatorAdd"},{"data":{"name":"operatorAddEquals","status":"run","time":"0","classname":"Quaternion"},"name":"operatorAddEquals"},{"data":{"name":"operatorMinus","status":"run","time":"0","classname":"Quaternion"},"name":"operatorMinus"},{"data":{"name":"operatorMinusEquals","status":"run","time":"0","classname":"Quaternion"},"name":"operatorMinusEquals"},{"data":{"name":"operatorMultiplyByQuaternion","status":"run","time":"0","classname":"Quaternion"},"name":"operatorMultiplyByQuaternion"},{"data":{"name":"operatorMultiplyByScalar","status":"run","time":"0","classname":"Quaternion"},"name":"operatorMultiplyByScalar"},{"data":{"name":"operatorMultiplyByQuaternionEquals","status":"run","time":"0","classname":"Quaternion"},"name":"operatorMultiplyByQuaternionEquals"},{"data":{"name":"operatorMultiplyByScalarEquals","status":"run","time":"0","classname":"Quaternion"},"name":"operatorMultiplyByScalarEquals"},{"data":{"name":"operatorDivide","status":"run","time":"0.002","classname":"Quaternion"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:13\r\n      Expected: TestQuaternion.x\r\n      Which is: 0.16666664\r\nTo be equal to: x\r\n      Which is: 0.27777779","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:13\n      Expected: TestQuaternion.x\n      Which is: 0.16666664\nTo be equal to: x\n      Which is: 0.27777779","type":""}},{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:15\r\n      Expected: TestQuaternion.z\r\n      Which is: -0.6111111\r\nTo be equal to: z\r\n      Which is: -0.16666667","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:15\n      Expected: TestQuaternion.z\n      Which is: -0.6111111\nTo be equal to: z\n      Which is: -0.16666667","type":""}},{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:16\r\n      Expected: TestQuaternion.w\r\n      Which is: 1.2777778\r\nTo be equal to: w\r\n      Which is: 1.3888888","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:16\n      Expected: TestQuaternion.w\n      Which is: 1.2777778\nTo be equal to: w\n      Which is: 1.3888888","type":""}}],"name":"operatorDivide"},{"data":{"name":"operatorDivideEquals","status":"run","time":"0.002","classname":"Quaternion"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:13\r\n      Expected: TestQuaternion.x\r\n      Which is: 8.7999992\r\nTo be equal to: x\r\n      Which is: 0.095238097","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:13\n      Expected: TestQuaternion.x\n      Which is: 8.7999992\nTo be equal to: x\n      Which is: 0.095238097","type":""}},{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:14\r\n      Expected: TestQuaternion.y\r\n      Which is: 0.93333304\r\nTo be equal to: y\r\n      Which is: -0.23809524","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:14\n      Expected: TestQuaternion.y\n      Which is: 0.93333304\nTo be equal to: y\n      Which is: -0.23809524","type":""}},{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:15\r\n      Expected: TestQuaternion.z\r\n      Which is: 4.9333329\r\nTo be equal to: z\r\n      Which is: -0.40476191","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:15\n      Expected: TestQuaternion.z\n      Which is: 4.9333329\nTo be equal to: z\n      Which is: -0.40476191","type":""}},{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:16\r\n      Expected: TestQuaternion.w\r\n      Which is: -3.8666666\r\nTo be equal to: w\r\n      Which is: 0.023809524","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_quaternion.cpp:16\n      Expected: TestQuaternion.w\n      Which is: -3.8666666\nTo be equal to: w\n      Which is: 0.023809524","type":""}}],"name":"operatorDivideEquals"},{"data":{"name":"operatorAssign","status":"run","time":"0","classname":"Quaternion"},"name":"operatorAssign"},{"data":{"name":"operatorEqual","status":"run","time":"0","classname":"Quaternion"},"name":"operatorEqual"},{"data":{"name":"operatorNotEqual","status":"run","time":"0","classname":"Quaternion"},"name":"operatorNotEqual"},{"data":{"name":"operatorNot","status":"run","time":"0","classname":"Quaternion"},"name":"operatorNot"}]}},{"name":"Radian","publicfunctions":[{"type":[""],"definition":["driderSDK::Radian::Radian"],"argsstring":["()"],"name":["Radian"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Radian::Radian"],"argsstring":["(Radian &&V)=default"],"name":["Radian"],"detaileddescription":[{"para":["Move constructor. "]}],"description":"Move constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Radian::Radian"],"argsstring":["(const Radian &V)"],"name":["Radian"],"detaileddescription":[{"para":["Copy constructor. "]}],"description":"Copy constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Radian::Radian"],"argsstring":["(float value)"],"name":["Radian"],"detaileddescription":[{"para":["Initialize class with value.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["value"]}],"parameterdescription":[{"para":["Initial value. "]}]}]}]}]}],"description":"Initialize class with value. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Radian::~Radian"],"argsstring":["()"],"name":["~Radian"],"detaileddescription":[{"para":["Default destructor. "]}],"description":"Default destructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Radian::toDegree"],"argsstring":["() const"],"name":["toDegree"],"detaileddescription":[{"para":[{"_":"Returns a  class with a value equal to the actual radian in degrees.","ref":[{"_":"Degree","$":{"refid":"classdrider_s_d_k_1_1_degree","kindref":"compound"}}]},{"simplesect":[{"$":{"kind":"return"},"para":["Class degree. "]}]}]}],"description":"[object Object] [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Radian","$":{"refid":"classdrider_s_d_k_1_1_radian","kindref":"compound"}}]}],"definition":["Radian & driderSDK::Radian::unwind"],"argsstring":["()"],"name":["unwind"],"detaileddescription":[{"para":["Limit the value in [0, 360)",{"simplesect":[{"$":{"kind":"return"},"para":["A reference to this class. "]}]}]}],"description":"Limit the value in [0, 360) [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Radian::operator float"],"argsstring":["()"],"name":["operator float"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Radian","$":{"refid":"classdrider_s_d_k_1_1_radian","kindref":"compound"}}]}],"definition":["Radian & driderSDK::Radian::operator="],"argsstring":["(float V)"],"name":["operator="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Radian","$":{"refid":"classdrider_s_d_k_1_1_radian","kindref":"compound"}}]}],"definition":["Radian & driderSDK::Radian::operator+="],"argsstring":["(float V)"],"name":["operator+="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Radian","$":{"refid":"classdrider_s_d_k_1_1_radian","kindref":"compound"}}]}],"definition":["Radian & driderSDK::Radian::operator-="],"argsstring":["(float V)"],"name":["operator-="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Radian","$":{"refid":"classdrider_s_d_k_1_1_radian","kindref":"compound"}}]}],"definition":["Radian & driderSDK::Radian::operator*="],"argsstring":["(float V)"],"name":["operator*="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Radian","$":{"refid":"classdrider_s_d_k_1_1_radian","kindref":"compound"}}]}],"definition":["Radian & driderSDK::Radian::operator/="],"argsstring":["(float V)"],"name":["operator/="],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"Nombre del test: Radian","testClase":{"name":"Radian","tests":"10","failures":"0","disabled":"0","errors":"0","time":"0.01","testCases":[{"data":{"name":"floatOperator","status":"run","time":"0","classname":"Radian"},"name":"floatOperator"},{"data":{"name":"floatConstructor","status":"run","time":"0","classname":"Radian"},"name":"floatConstructor"},{"data":{"name":"CopyConstructor","status":"run","time":"0","classname":"Radian"},"name":"CopyConstructor"},{"data":{"name":"ToRadian","status":"run","time":"0","classname":"Radian"},"name":"ToRadian"},{"data":{"name":"Unwind","status":"run","time":"0","classname":"Radian"},"name":"Unwind"},{"data":{"name":"equalFloat","status":"run","time":"0","classname":"Radian"},"name":"equalFloat"},{"data":{"name":"plusEqualFloat","status":"run","time":"0","classname":"Radian"},"name":"plusEqualFloat"},{"data":{"name":"lessEqualFloat","status":"run","time":"0","classname":"Radian"},"name":"lessEqualFloat"},{"data":{"name":"mulEqualFloat","status":"run","time":"0","classname":"Radian"},"name":"mulEqualFloat"},{"data":{"name":"divEqualFloat","status":"run","time":"0","classname":"Radian"},"name":"divEqualFloat"}]}},{"name":"Ray","publicfunctions":[{"type":[""],"definition":["driderSDK::Ray::Ray"],"argsstring":["()"],"name":["Ray"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Ray::Ray"],"argsstring":["(Vector3D _origin, Vector3D _direction)"],"name":["Ray"],"detaileddescription":[{"para":["Constructor using origin and direction",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["_origin"]}],"parameterdescription":[{"para":["The origin of the ray."]}]},{"parameternamelist":[{"parametername":["_direction"]}],"parameterdescription":[{"para":["The direction of the ray "]}]}]}]}]}],"description":"Constructor using origin and direction [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Ray::~Ray"],"argsstring":["()"],"name":["~Ray"],"detaileddescription":[{"para":["Destructor "]}],"description":"Destructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Ray::intersects"],"argsstring":["(const Ray &bRay) const"],"name":["intersects"],"detaileddescription":[{"para":["Check if the ray intersects other ray",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["bRay"]}],"parameterdescription":[{"para":["The other ray to check the intersecton."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if the ray intersects with the other ray "]}]}]}],"description":"Check if the ray intersects other ray [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Ray::intersects"],"argsstring":["(const Plane &plane) const"],"name":["intersects"],"detaileddescription":[{"para":["Check if the ray intersects with a plane",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["plane"]}],"parameterdescription":[{"para":["The plane to check the intersecton."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if the ray intersects with the plane "]}]}]}],"description":"Check if the ray intersects with a plane [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Ray::intersects"],"argsstring":["(const Plane &plane, float *t) const"],"name":["intersects"],"detaileddescription":[{"para":["Check if the ray intersects with a plane",{"_":"\nparam t The parameter of the point intersection.","parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["plane"]}],"parameterdescription":[{"para":["The plane to check the intersecton."]}]}]}]},{"simplesect":[{"$":{"kind":"return"},"para":["True if the ray intersects with the plane "]}]}]}],"description":"Check if the ray intersects with a plane [object Object] [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Ray::intersects"],"argsstring":["(const Sphere &sphere) const"],"name":["intersects"],"detaileddescription":[{"para":["Check if the ray intersects with a sphere",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["sphere"]}],"parameterdescription":[{"para":["The sphere to check the intersecton."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if the ray intersects with the sphere "]}]}]}],"description":"Check if the ray intersects with a sphere [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Ray::intersects"],"argsstring":["(const Capsule &capsule) const"],"name":["intersects"],"detaileddescription":[{"para":["Check if the ray intersects with a capsule",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["capsule"]}],"parameterdescription":[{"para":["The capsule to check the intersecton."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if the ray intersects with the capsule "]}]}]}],"description":"Check if the ray intersects with a capsule [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Ray::intersects"],"argsstring":["(const Frustrum &frustrum) const"],"name":["intersects"],"detaileddescription":[{"para":["Check if the ray intersects with a frustrum",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["frustrum"]}],"parameterdescription":[{"para":["The frustrum to check the intersecton."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if the ray intersects with the frustrum "]}]}]}],"description":"Check if the ray intersects with a frustrum [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Resource","publicfunctions":[],"testFile":"No existe Test con el nombre de la clase"},{"name":"ResourceManager","publicfunctions":[{"type":[""],"definition":["driderSDK::ResourceManager::ResourceManager"],"argsstring":["()"],"name":["ResourceManager"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::ResourceManager::~ResourceManager"],"argsstring":["()"],"name":["~ResourceManager"],"detaileddescription":[{"para":["Default destructor. "]}],"description":"Default destructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::ResourceManager::loadResource"],"argsstring":["(std::string nameResource, std::string pathFile)"],"name":["loadResource"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::ResourceManager::createResource"],"argsstring":["(ResourceType::E resourceType, std::string resourceName)"],"name":["createResource"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::ResourceManager::isCompatible"],"argsstring":["(std::string resource, ResourceType::E &resourceTypeOut)"],"name":["isCompatible"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::ResourceManager::existInResourceContent"],"argsstring":["(std::string key)"],"name":["existInResourceContent"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"std::shared_ptr<  >","ref":[{"_":"Resource","$":{"refid":"classdrider_s_d_k_1_1_resource","kindref":"compound"}}]}],"definition":["std::shared_ptr< Resource > driderSDK::ResourceManager::getReference"],"argsstring":["(std::string key)"],"name":["getReference"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Sphere","publicfunctions":[{"type":[""],"definition":["driderSDK::Sphere::Sphere"],"argsstring":["()"],"name":["Sphere"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Sphere::Sphere"],"argsstring":["(Vector3D _center, float _radius)"],"name":["Sphere"],"detaileddescription":[{"para":["Constructor with center and radius. "]}],"description":"Constructor with center and radius.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Sphere::~Sphere"],"argsstring":["()"],"name":["~Sphere"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Sphere::intersects"],"argsstring":["(const Vector3D &point)"],"name":["intersects"],"detaileddescription":[{"para":["Checks if a point is on a sphare.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["point"]}],"parameterdescription":[{"para":["The point to check."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Return true if the point is in the sphere, otherwise return false. "]}]}]}],"description":"Checks if a point is on a sphare. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Sphere::intersects"],"argsstring":["(const Plane &plane)"],"name":["intersects"],"detaileddescription":[{"para":["Checks if a plane intersets with a sphere.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["plane"]}],"parameterdescription":[{"para":["The plane to check."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Return true if the plane intersects with the sphere, otherwise return false. "]}]}]}],"description":"Checks if a plane intersets with a sphere. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Sphere::intersects"],"argsstring":["(const Sphere &sphere)"],"name":["intersects"],"detaileddescription":[{"para":["Checks if a sphere intersets with other sphere.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["sphere"]}],"parameterdescription":[{"para":["The sphere to check."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Return true if the sphere intersects with the other sphere, otherwise return false. "]}]}]}],"description":"Checks if a sphere intersets with other sphere. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Sphere::intersects"],"argsstring":["(const AABB &aabb)"],"name":["intersects"],"detaileddescription":[{"para":["Checks if a aabb intersets with a sphere.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["aabb"]}],"parameterdescription":[{"para":["The aabb to check."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Return true if the sphere intersects with the aabb, otherwise return false. "]}]}]}],"description":"Checks if a aabb intersets with a sphere. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Sphere::intersects"],"argsstring":["(const Capsule &capsule)"],"name":["intersects"],"detaileddescription":[{"para":["Checks if a capsule intersets with a sphere.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["capsule"]}],"parameterdescription":[{"para":["The capsule to check."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Return true if the sphere intersects with the capsule, otherwise return false. "]}]}]}],"description":"Checks if a capsule intersets with a sphere. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Sphere::intersects"],"argsstring":["(const Frustrum &frustrum)"],"name":["intersects"],"detaileddescription":[{"para":["Checks if a frustrum intersets with a sphere.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["frustrum"]}],"parameterdescription":[{"para":["The frustrum to check."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Return true if the sphere intersects with the frustrum, otherwise return false. "]}]}]}],"description":"Checks if a frustrum intersets with a sphere. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"Nombre del test: Sphere","testClase":{"name":"Sphere","tests":"3","failures":"0","disabled":"0","errors":"0","time":"0.003","testCases":[{"data":{"name":"intersect_point","status":"run","time":"0","classname":"Sphere"},"name":"intersect_point"},{"data":{"name":"intersect_sphere","status":"run","time":"0","classname":"Sphere"},"name":"intersect_sphere"},{"data":{"name":"intersect_capsule","status":"run","time":"0","classname":"Sphere"},"name":"intersect_capsule"}]}},{"name":"Texture","publicfunctions":[],"testFile":"No existe Test con el nombre de la clase"},{"name":"Vector2D","publicfunctions":[{"type":[""],"definition":["driderSDK::Vector2D::Vector2D"],"argsstring":["()"],"name":["Vector2D"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2D::Vector2D"],"argsstring":["(Math::FORCE_INIT k)"],"name":["Vector2D"],"detaileddescription":[{"para":["Default constructor.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["k"]}],"parameterdescription":[{"para":["Values are initialized with 0. "]}]}]}]}]}],"description":"Default constructor. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2D::Vector2D"],"argsstring":["(Vector2D &&V)=default"],"name":["Vector2D"],"detaileddescription":[{"para":["Move constructor. "]}],"description":"Move constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2D::Vector2D"],"argsstring":["(const Vector2D &V)"],"name":["Vector2D"],"detaileddescription":[{"para":["Copy constructor. "]}],"description":"Copy constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2D::Vector2D"],"argsstring":["(float _x, float _y)"],"name":["Vector2D"],"detaileddescription":[{"para":["Initialize constructor with values.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["_x"]}],"parameterdescription":[{"para":["The x value of the vector."]}]},{"parameternamelist":[{"parametername":["_y"]}],"parameterdescription":[{"para":["The y value of the vector. "]}]}]}]}]}],"description":"Initialize constructor with values. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2D::~Vector2D"],"argsstring":["()"],"name":["~Vector2D"],"detaileddescription":[{"para":["Default destructor. "]}],"description":"Default destructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2D::dot"],"argsstring":["(const Vector2D &B) const"],"name":["dot"],"detaileddescription":[{"para":["Computes the dot product between this vector and the vector parameter. This operatios is commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The sum of the products of the corresponding entries of the vectors. "]}]}]}],"description":"Computes the dot product between this vector and the vector parameter. This operatios is commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D driderSDK::Vector2D::cross"],"argsstring":["() const"],"name":["cross"],"detaileddescription":[{"para":["Computes the cross product between himself.",{"simplesect":[{"$":{"kind":"return"},"para":["Result vector of the cross product "]}]}]}],"description":"Computes the cross product between himself. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2D::length"],"argsstring":["() const"],"name":["length"],"detaileddescription":[{"para":["Computes the length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector. "]}]}]}],"description":"Computes the length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2D::lengthSqr"],"argsstring":["() const"],"name":["lengthSqr"],"detaileddescription":[{"para":["Computes the squared length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector squared. "]}]}]}],"description":"Computes the squared length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Vector2D::normalize"],"argsstring":["()"],"name":["normalize"],"detaileddescription":[{"para":["Normalize the vector. "]}],"description":"Normalize the vector.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2D::distance"],"argsstring":["(const Vector2D &otherVector) const"],"name":["distance"],"detaileddescription":[{"para":["Computes the distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["otherVector"]}],"parameterdescription":[{"para":["Vector to calculate the distance."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance. "]}]}]}],"description":"Computes the distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2D::distanceSqr"],"argsstring":["(const Vector2D &otherVector) const"],"name":["distanceSqr"],"detaileddescription":[{"para":["Computes the squared distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["otherVector"]}],"parameterdescription":[{"para":["Vector to calculate the distance."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance. "]}]}]}],"description":"Computes the squared distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector2D::equals"],"argsstring":["(const Vector2D &otherVector, float errorRange=Math::SMALL_NUMBER) const"],"name":["equals"],"detaileddescription":[{"para":["Check's if the other vector is equal to this vector with an error range.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["otherVector"]}],"parameterdescription":[{"para":["Vector to compare with this vector."]}]},{"parameternamelist":[{"parametername":["errorRange"]}],"parameterdescription":[{"para":["The value of the error range."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["bool expression of condition. "]}]}]}],"description":"Check's if the other vector is equal to this vector with an error range. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float *"],"definition":["float * driderSDK::Vector2D::ptr"],"argsstring":["()"],"name":["ptr"],"detaileddescription":[{"para":["Gets a reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. Gets a pointer to the first element of the matrix."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position."]},{"$":{"kind":"return"},"para":["A pointer to the first element of the matrix. "]}]}]}],"description":"Gets a reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float *"],"definition":["const float * driderSDK::Vector2D::ptr"],"argsstring":["() const"],"name":["ptr"],"detaileddescription":[{"para":["Gets a constant pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A constant pointer to the first element of the matrix. "]}]}]}],"description":"Gets a constant pointer to the first element of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float &"],"definition":["float & driderSDK::Vector2D::operator[]"],"argsstring":["(const SizeT index)"],"name":["operator[]"],"detaileddescription":["\n        "],"description":"","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float &"],"definition":["const float & driderSDK::Vector2D::operator[]"],"argsstring":["(const SizeT index) const"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position."]}]}]}],"description":"Gets a reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2D::operator|"],"argsstring":["(const Vector2D &B) const"],"name":["operator|"],"detaileddescription":[{"para":["Computes the dot product between this vector and the vector parameter. This operatios is commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The sum of the products of the corresponding entries of the vectors. "]}]}]}],"description":"Computes the dot product between this vector and the vector parameter. This operatios is commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D & driderSDK::Vector2D::operator="],"argsstring":["(const Vector2D &A)"],"name":["operator="],"detaileddescription":[{"para":["Set the x, y values of this vector with the x, y of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Set the x, y values of this vector with the x, y of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D driderSDK::Vector2D::operator+"],"argsstring":["(const Vector2D &A) const"],"name":["operator+"],"detaileddescription":[{"para":["Adds elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Adds elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D & driderSDK::Vector2D::operator+="],"argsstring":["(const Vector2D &A)"],"name":["operator+="],"detaileddescription":[{"para":["Adds elements of the vector with the elements of the other vector and stores it in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Adds elements of the vector with the elements of the other vector and stores it in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D driderSDK::Vector2D::operator-"],"argsstring":["(const Vector2D &A) const"],"name":["operator-"],"detaileddescription":[{"para":["Substracts elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Substracts elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D & driderSDK::Vector2D::operator-="],"argsstring":["(const Vector2D &A)"],"name":["operator-="],"detaileddescription":[{"para":["Substracts elements of the vector with the elements of the other vector and stores it in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Substracts elements of the vector with the elements of the other vector and stores it in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D driderSDK::Vector2D::operator*"],"argsstring":["(const Vector2D &A) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the factors to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Multiplies elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D & driderSDK::Vector2D::operator*="],"argsstring":["(const Vector2D &A)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies elements of the vector with the elements of the other vector, and stores the result in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the factors to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Multiplies elements of the vector with the elements of the other vector, and stores the result in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D driderSDK::Vector2D::operator*"],"argsstring":["(const float scalar) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies elements of the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The factor."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Multiplies elements of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D & driderSDK::Vector2D::operator*="],"argsstring":["(const float scalar)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies elements of the vector and stores it in the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The factor."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Multiplies elements of the vector and stores it in the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D driderSDK::Vector2D::operator/"],"argsstring":["(const float scalar) const"],"name":["operator/"],"detaileddescription":[{"para":["Divide elements of the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The dividend."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Divide elements of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D & driderSDK::Vector2D::operator/="],"argsstring":["(const float scalar)"],"name":["operator/="],"detaileddescription":[{"para":["Divide elements of the vector and stores it in the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The dividend."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Divide elements of the vector and stores it in the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector2D::operator=="],"argsstring":["(const Vector2D &otherVector)"],"name":["operator=="],"detaileddescription":[{"para":["Checks if the values of the vectors are equal.",{"simplesect":[{"$":{"kind":"return"},"para":["Flag if vectors are equal. "]}]}]}],"description":"Checks if the values of the vectors are equal. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector2D::operator!="],"argsstring":["(const Vector2D &otherVector)"],"name":["operator!="],"detaileddescription":[{"para":["Checks if the values of the vectors aren't equal.",{"simplesect":[{"$":{"kind":"return"},"para":["Flag if vectors aren't equal. "]}]}]}],"description":"Checks if the values of the vectors aren't equal. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2D","$":{"refid":"classdrider_s_d_k_1_1_vector2_d","kindref":"compound"}}]}],"definition":["Vector2D driderSDK::Vector2D::operator-"],"argsstring":["() const"],"name":["operator-"],"detaileddescription":[{"para":["Returns this vector with negated values. "]}],"description":"Returns this vector with negated values.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"Nombre del test: Vector2D","testClase":{"name":"Vector2D","tests":"9","failures":"0","disabled":"0","errors":"0","time":"0.014","testCases":[{"data":{"name":"forceInitZero","status":"run","time":"0","classname":"Vector2D"},"name":"forceInitZero"},{"data":{"name":"forceInitOne","status":"run","time":"0","classname":"Vector2D"},"name":"forceInitOne"},{"data":{"name":"constructForVector2D","status":"run","time":"0","classname":"Vector2D"},"name":"constructForVector2D"},{"data":{"name":"constructorFor2Floats","status":"run","time":"0","classname":"Vector2D"},"name":"constructorFor2Floats"},{"data":{"name":"dot","status":"run","time":"0","classname":"Vector2D"},"name":"dot"},{"data":{"name":"length","status":"run","time":"0","classname":"Vector2D"},"name":"length"},{"data":{"name":"lengthSQR","status":"run","time":"0","classname":"Vector2D"},"name":"lengthSQR"},{"data":{"name":"normalize","status":"run","time":"0","classname":"Vector2D"},"name":"normalize"},{"data":{"name":"distance","status":"run","time":"0","classname":"Vector2D"},"name":"distance"}]}},{"name":"Vector2DI","publicfunctions":[{"type":[""],"definition":["driderSDK::Vector2DI::Vector2DI"],"argsstring":["()"],"name":["Vector2DI"],"detaileddescription":[{"para":["Default constructor "]}],"description":"Default constructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2DI::Vector2DI"],"argsstring":["(Math::FORCE_INIT k)"],"name":["Vector2DI"],"detaileddescription":[{"para":["Default constructor",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["k"]}],"parameterdescription":[{"para":["Values are initialized with 0. "]}]}]}]}]}],"description":"Default constructor [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2DI::Vector2DI"],"argsstring":["(Vector2DI &&V)=default"],"name":["Vector2DI"],"detaileddescription":[{"para":["Move constructor "]}],"description":"Move constructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2DI::Vector2DI"],"argsstring":["(const Vector2DI &V)"],"name":["Vector2DI"],"detaileddescription":[{"para":["Copy constructor "]}],"description":"Copy constructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2DI::Vector2DI"],"argsstring":["(Int32 _x, Int32 _y)"],"name":["Vector2DI"],"detaileddescription":[{"para":["Initialize constructor with values.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["_x"]}],"parameterdescription":[{"para":["The x value of the vector"]}]},{"parameternamelist":[{"parametername":["_y"]}],"parameterdescription":[{"para":["The y value of the vector "]}]}]}]}]}],"description":"Initialize constructor with values. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector2DI::~Vector2DI"],"argsstring":["()"],"name":["~Vector2DI"],"detaileddescription":[{"para":["Default destructor "]}],"description":"Default destructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2DI::dot"],"argsstring":["(const Vector2DI &B) const"],"name":["dot"],"detaileddescription":[{"para":["Computes the dot product between this vector and the vector parameter. This operatios is commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The sum of the products of the corresponding entries of the vectors. "]}]}]}],"description":"Computes the dot product between this vector and the vector parameter. This operatios is commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI driderSDK::Vector2DI::cross"],"argsstring":["() const"],"name":["cross"],"detaileddescription":[{"para":["Computes the cross product between himself.",{"simplesect":[{"$":{"kind":"return"},"para":["Result vector of the cross product "]}]}]}],"description":"Computes the cross product between himself. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2DI::length"],"argsstring":["() const"],"name":["length"],"detaileddescription":[{"para":["Computes the length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector. "]}]}]}],"description":"Computes the length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2DI::lengthSqr"],"argsstring":["() const"],"name":["lengthSqr"],"detaileddescription":[{"para":["Computes the squared length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector squared. "]}]}]}],"description":"Computes the squared length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Vector2DI::normalize"],"argsstring":["()"],"name":["normalize"],"detaileddescription":[{"para":["Normalize the vector. "]}],"description":"Normalize the vector.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2DI::distance"],"argsstring":["(const Vector2DI &otherVector) const"],"name":["distance"],"detaileddescription":[{"para":["Computes the distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Vector to calculate the distance"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance "]}]}]}],"description":"Computes the distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2DI::distanceSqr"],"argsstring":["(const Vector2DI &otherVector) const"],"name":["distanceSqr"],"detaileddescription":[{"para":["Computes the squared distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Vector to calculate the distance"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance "]}]}]}],"description":"Computes the squared distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector2DI::equals"],"argsstring":["(const Vector2DI &otherVector, float errorRange=Math::SMALL_NUMBER) const"],"name":["equals"],"detaileddescription":[{"para":["Check's if the other vector is equal to this vector with an error range.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["otherVector"]}],"parameterdescription":[{"para":["Vector to compare with this vector."]}]},{"parameternamelist":[{"parametername":["errorRange"]}],"parameterdescription":[{"para":["The value of the error range."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["bool expression of condition. "]}]}]}],"description":"Check's if the other vector is equal to this vector with an error range. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["Int32 *"],"definition":["Int32 * driderSDK::Vector2DI::ptr"],"argsstring":["()"],"name":["ptr"],"detaileddescription":[{"para":["Gets a pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A pointer to the first element of the matrix. "]}]}]}],"description":"Gets a pointer to the first element of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int32 *"],"definition":["const Int32 * driderSDK::Vector2DI::ptr"],"argsstring":["() const"],"name":["ptr"],"detaileddescription":[{"para":["Gets a constant pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A constant pointer to the first element of the matrix. "]}]}]}],"description":"Gets a constant pointer to the first element of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["Int32 &"],"definition":["Int32 & driderSDK::Vector2DI::operator[]"],"argsstring":["(const SizeT index)"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a const reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position."]}]}]}],"description":"Gets a const reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const Int32 &"],"definition":["const Int32 & driderSDK::Vector2DI::operator[]"],"argsstring":["(const SizeT index) const"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a const reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position."]}]}]}],"description":"Gets a const reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector2DI::operator|"],"argsstring":["(const Vector2DI &B) const"],"name":["operator|"],"detaileddescription":[{"para":["Computes the dot product between this vector and the vector parameter. This operatios is commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The sum of the products of the corresponding entries of the vectors. "]}]}]}],"description":"Computes the dot product between this vector and the vector parameter. This operatios is commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI & driderSDK::Vector2DI::operator="],"argsstring":["(const Vector2DI &A)"],"name":["operator="],"detaileddescription":[{"para":["Set the x, y values of this vector with the x, y of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Set the x, y values of this vector with the x, y of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI driderSDK::Vector2DI::operator+"],"argsstring":["(const Vector2DI &A) const"],"name":["operator+"],"detaileddescription":[{"para":["Adds elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Adds elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI & driderSDK::Vector2DI::operator+="],"argsstring":["(const Vector2DI &A)"],"name":["operator+="],"detaileddescription":[{"para":["Adds elements of the vector with the elements of the other vector and stores it in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Adds elements of the vector with the elements of the other vector and stores it in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI driderSDK::Vector2DI::operator-"],"argsstring":["(const Vector2DI &A) const"],"name":["operator-"],"detaileddescription":[{"para":["Substracts elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Substracts elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI & driderSDK::Vector2DI::operator-="],"argsstring":["(const Vector2DI &A)"],"name":["operator-="],"detaileddescription":[{"para":["Substracts elements of the vector with the elements of the other vector and stores it in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Substracts elements of the vector with the elements of the other vector and stores it in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI driderSDK::Vector2DI::operator*"],"argsstring":["(const Vector2DI &A) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the factors to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Multiplies elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI & driderSDK::Vector2DI::operator*="],"argsstring":["(const Vector2DI &A)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies elements of the vector with the elements of the other vector, and stores the result in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the factors to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Multiplies elements of the vector with the elements of the other vector, and stores the result in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI driderSDK::Vector2DI::operator*"],"argsstring":["(const float scalar) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies elements of the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The factor."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Multiplies elements of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI & driderSDK::Vector2DI::operator*="],"argsstring":["(const float scalar)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies elements of the vector and stores it in the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The factor."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Multiplies elements of the vector and stores it in the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI driderSDK::Vector2DI::operator/"],"argsstring":["(const float scalar) const"],"name":["operator/"],"detaileddescription":[{"para":["Divide elements of the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The dividend."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Divide elements of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI & driderSDK::Vector2DI::operator/="],"argsstring":["(const float scalar)"],"name":["operator/="],"detaileddescription":[{"para":["Divide elements of the vector and stores it in the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The dividend."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Divide elements of the vector and stores it in the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector2DI::operator=="],"argsstring":["(const Vector2DI &otherVector)"],"name":["operator=="],"detaileddescription":[{"para":["Checks if the values of the vectors are equal.",{"simplesect":[{"$":{"kind":"return"},"para":["Flag if vectors are equal. "]}]}]}],"description":"Checks if the values of the vectors are equal. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector2DI::operator!="],"argsstring":["(const Vector2DI &otherVector)"],"name":["operator!="],"detaileddescription":[{"para":["Checks if the values of the vectors aren't equal.",{"simplesect":[{"$":{"kind":"return"},"para":["Flag if vectors aren't equal. "]}]}]}],"description":"Checks if the values of the vectors aren't equal. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector2DI","$":{"refid":"classdrider_s_d_k_1_1_vector2_d_i","kindref":"compound"}}]}],"definition":["Vector2DI driderSDK::Vector2DI::operator-"],"argsstring":["() const"],"name":["operator-"],"detaileddescription":[{"para":["Returns this vector with negated values. "]}],"description":"Returns this vector with negated values.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"Nombre del test: Vector2DI","testClase":{"name":"Vector2DI","tests":"9","failures":"5","disabled":"0","errors":"0","time":"0.012","testCases":[{"data":{"name":"forceInitZero","status":"run","time":"0","classname":"Vector2DI"},"name":"forceInitZero"},{"data":{"name":"forceInitOne","status":"run","time":"0","classname":"Vector2DI"},"name":"forceInitOne"},{"data":{"name":"constructForVector2DI","status":"run","time":"0","classname":"Vector2DI"},"name":"constructForVector2DI"},{"data":{"name":"constructorFor2Int32","status":"run","time":"0.001","classname":"Vector2DI"},"name":"constructorFor2Int32"},{"data":{"name":"dot","status":"run","time":"0.001","classname":"Vector2DI"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:43\r\n      Expected: 693.5797004f\r\n      Which is: 693.57971\r\nTo be equal to: testVector2.dot(testVector3)\r\n      Which is: 694","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:43\n      Expected: 693.5797004f\n      Which is: 693.57971\nTo be equal to: testVector2.dot(testVector3)\n      Which is: 694","type":""}}],"name":"dot"},{"data":{"name":"length","status":"run","time":"0.001","classname":"Vector2DI"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:59\r\n      Expected: 10.049965223825405f\r\n      Which is: 10.049965\r\nTo be equal to: testVector2.length()\r\n      Which is: 9.0553856","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:59\n      Expected: 10.049965223825405f\n      Which is: 10.049965\nTo be equal to: testVector2.length()\n      Which is: 9.0553856","type":""}}],"name":"length"},{"data":{"name":"lengthSQR","status":"run","time":"0","classname":"Vector2DI"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:70\r\n      Expected: 101.00180100010002281946192341403f\r\n      Which is: 101.0018\r\nTo be equal to: testVector2.lengthSqr()\r\n      Which is: 82","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:70\n      Expected: 101.00180100010002281946192341403f\n      Which is: 101.0018\nTo be equal to: testVector2.lengthSqr()\n      Which is: 82","type":""}}],"name":"lengthSQR"},{"data":{"name":"normalize","status":"run","time":"0.001","classname":"Vector2DI"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:85\r\n      Expected: 1\r\nTo be equal to: testVector3.length()\r\n      Which is: 0","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:85\n      Expected: 1\nTo be equal to: testVector3.length()\n      Which is: 0","type":""}}],"name":"normalize"},{"data":{"name":"distance","status":"run","time":"0","classname":"Vector2DI"},"failure":[{"_":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:99\r\n      Expected: 1020.92105f\r\n      Which is: 1020.921\r\nTo be equal to: testVector4.distance(testVector5)\r\n      Which is: 1021.0935","$":{"message":"f:\\projectsvs2017\\drider-engine\\mathunittest\\source\\dr_unittest_vector2di.cpp:99\n      Expected: 1020.92105f\n      Which is: 1020.921\nTo be equal to: testVector4.distance(testVector5)\n      Which is: 1021.0935","type":""}}],"name":"distance"}]}},{"name":"Vector3D","publicfunctions":[{"type":[""],"definition":["driderSDK::Vector3D::Vector3D"],"argsstring":["()"],"name":["Vector3D"],"detaileddescription":[{"para":["Default constructor "]}],"description":"Default constructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector3D::Vector3D"],"argsstring":["(Math::FORCE_INIT k)"],"name":["Vector3D"],"detaileddescription":[{"para":["Default constructor",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["k"]}],"parameterdescription":[{"para":["Values are initialized with 0. "]}]}]}]}]}],"description":"Default constructor [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector3D::Vector3D"],"argsstring":["(Vector3D &&V)=default"],"name":["Vector3D"],"detaileddescription":[{"para":[{"itemizedlist":[{"listitem":[{"para":["* Move constructor "]}]}]}]}],"description":"[object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector3D::Vector3D"],"argsstring":["(const Vector3D &V)"],"name":["Vector3D"],"detaileddescription":[{"para":["Copy constructor "]}],"description":"Copy constructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector3D::Vector3D"],"argsstring":["(const Vector4D &V)"],"name":["Vector3D"],"detaileddescription":[{"para":["Copy constructor for vec4 to vec3 "]}],"description":"Copy constructor for vec4 to vec3  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector3D::Vector3D"],"argsstring":["(float _x, float _y, float _z)"],"name":["Vector3D"],"detaileddescription":[{"para":["Initialize constructor with values.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["_x"]}],"parameterdescription":[{"para":["The x value of the vector"]}]},{"parameternamelist":[{"parametername":["_y"]}],"parameterdescription":[{"para":["The y value of the vector"]}]},{"parameternamelist":[{"parametername":["_z"]}],"parameterdescription":[{"para":["The z value of the vector "]}]}]}]}]}],"description":"Initialize constructor with values. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector3D::~Vector3D"],"argsstring":["()"],"name":["~Vector3D"],"detaileddescription":[{"para":["Default destructor "]}],"description":"Default destructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector3D::dot"],"argsstring":["(const Vector3D &B) const"],"name":["dot"],"detaileddescription":[{"para":["Computes the dot product between this vector and the vector parameter. This operatios is commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The sum of the products of the corresponding entries of the vectors. "]}]}]}],"description":"Computes the dot product between this vector and the vector parameter. This operatios is commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D driderSDK::Vector3D::cross"],"argsstring":["(const Vector3D &B) const"],"name":["cross"],"detaileddescription":[{"para":["Computes the cross product between this vector and the vector parameter. This operatios is NOT commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the cross product is calculated. B (vector parameter) is the rigth value of operation AxB"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Result vector of the cross product "]}]}]}],"description":"Computes the cross product between this vector and the vector parameter. This operatios is NOT commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector3D::length"],"argsstring":["() const"],"name":["length"],"detaileddescription":[{"para":["Computes the length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector. "]}]}]}],"description":"Computes the length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector3D::lengthSqr"],"argsstring":["() const"],"name":["lengthSqr"],"detaileddescription":[{"para":["Computes the squared length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector squared. "]}]}]}],"description":"Computes the squared length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Vector3D::normalize"],"argsstring":["()"],"name":["normalize"],"detaileddescription":[{"para":["Normalize the vector. "]}],"description":"Normalize the vector.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector3D::distance"],"argsstring":["(const Vector3D &otherVector) const"],"name":["distance"],"detaileddescription":[{"para":["Computes the distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Vector to calculate the distance"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance "]}]}]}],"description":"Computes the distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector3D::distanceSqr"],"argsstring":["(const Vector3D &otherVector) const"],"name":["distanceSqr"],"detaileddescription":[{"para":["Computes the squared distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Vector to calculate the distance"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance "]}]}]}],"description":"Computes the squared distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector3D::equals"],"argsstring":["(const Vector3D &otherVector, float errorRange=Math::SMALL_NUMBER) const"],"name":["equals"],"detaileddescription":[{"para":["Check's if the other vector is equal to this vector with an error range.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["otherVector"]}],"parameterdescription":[{"para":["Vector to compare with this vector."]}]},{"parameternamelist":[{"parametername":["errorRange"]}],"parameterdescription":[{"para":["The value of the error range."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["bool expression of condition. "]}]}]}],"description":"Check's if the other vector is equal to this vector with an error range. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector3D::sqrDistSegment"],"argsstring":["(const Vector3D &pointA, const Vector3D &pointB) const"],"name":["sqrDistSegment"],"detaileddescription":[{"para":["Computes the squared distance between a point and a segment.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["pointA"]}],"parameterdescription":[{"para":["Point a of the segment."]}]},{"parameternamelist":[{"parametername":["pointB"]}],"parameterdescription":[{"para":["Point b of the segment."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance "]}]}]}],"description":"Computes the squared distance between a point and a segment. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float *"],"definition":["float * driderSDK::Vector3D::ptr"],"argsstring":["()"],"name":["ptr"],"detaileddescription":[{"para":["Gets a pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A pointer to the first element of the matrix. "]}]}]}],"description":"Gets a pointer to the first element of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float *"],"definition":["const float * driderSDK::Vector3D::ptr"],"argsstring":["() const"],"name":["ptr"],"detaileddescription":[{"para":["Gets a constant pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A constant pointer to the first element of the matrix. "]}]}]}],"description":"Gets a constant pointer to the first element of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float &"],"definition":["float & driderSDK::Vector3D::operator[]"],"argsstring":["(const SizeT index)"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position."]}]}]}],"description":"Gets a reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float &"],"definition":["const float & driderSDK::Vector3D::operator[]"],"argsstring":["(const SizeT index) const"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position."]}]}]}],"description":"Gets a reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector3D::operator|"],"argsstring":["(const Vector3D &B) const"],"name":["operator|"],"detaileddescription":[{"para":["Computes the dot product between this vector and the vector parameter. This operatios is commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The sum of the products of the corresponding entries of the vectors. "]}]}]}],"description":"Computes the dot product between this vector and the vector parameter. This operatios is commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D driderSDK::Vector3D::operator^"],"argsstring":["(const Vector3D &B) const"],"name":["operator^"],"detaileddescription":[{"para":["Computes the cross product between this vector and the vector parameter. This operatios is NOT commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the cross product is calculated. B (vector parameter) is the rigth value of operation AxB"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Result vector of the cross product "]}]}]}],"description":"Computes the cross product between this vector and the vector parameter. This operatios is NOT commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D & driderSDK::Vector3D::operator="],"argsstring":["(const Vector3D &A)"],"name":["operator="],"detaileddescription":[{"para":["Set the x, y, z values of this vector with the x, y, z of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Set the x, y, z values of this vector with the x, y, z of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D & driderSDK::Vector3D::operator="],"argsstring":["(const Vector4D &A)"],"name":["operator="],"detaileddescription":[{"para":["Set the x, y, z values of this vector with the x, y, z of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Set the x, y, z values of this vector with the x, y, z of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D driderSDK::Vector3D::operator+"],"argsstring":["(const Vector3D &A) const"],"name":["operator+"],"detaileddescription":[{"para":["Adds elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Adds elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D & driderSDK::Vector3D::operator+="],"argsstring":["(const Vector3D &A)"],"name":["operator+="],"detaileddescription":[{"para":["Adds elements of the vector with the elements of the other vector and stores it in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Adds elements of the vector with the elements of the other vector and stores it in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D driderSDK::Vector3D::operator-"],"argsstring":["(const Vector3D &A) const"],"name":["operator-"],"detaileddescription":[{"para":["Substracts elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Substracts elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D & driderSDK::Vector3D::operator-="],"argsstring":["(const Vector3D &A)"],"name":["operator-="],"detaileddescription":[{"para":["Substracts elements of the vector with the elements of the other vector and stores it in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Substracts elements of the vector with the elements of the other vector and stores it in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D driderSDK::Vector3D::operator*"],"argsstring":["(const Vector3D &A) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the factors to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Multiplies elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D & driderSDK::Vector3D::operator*="],"argsstring":["(const Vector3D &A)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies elements of the vector with the elements of the other vector, and stores the result in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the factors to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Multiplies elements of the vector with the elements of the other vector, and stores the result in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D driderSDK::Vector3D::operator*"],"argsstring":["(const float scalar) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies elements of the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The factor."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Multiplies elements of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D & driderSDK::Vector3D::operator*="],"argsstring":["(const float scalar)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies elements of the vector and stores it in the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The factor."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Multiplies elements of the vector and stores it in the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D driderSDK::Vector3D::operator/"],"argsstring":["(const float scalar) const"],"name":["operator/"],"detaileddescription":[{"para":["Divide elements of the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The dividend."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Divide elements of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D & driderSDK::Vector3D::operator/="],"argsstring":["(const float scalar)"],"name":["operator/="],"detaileddescription":[{"para":["Divide elements of the vector and stores it in the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The dividend."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Divide elements of the vector and stores it in the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector3D::operator=="],"argsstring":["(const Vector3D &otherVector)"],"name":["operator=="],"detaileddescription":[{"para":["Checks if the values of the vectors are equal.",{"simplesect":[{"$":{"kind":"return"},"para":["Flag if vectors are equal. "]}]}]}],"description":"Checks if the values of the vectors are equal. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector3D::operator!="],"argsstring":["(const Vector3D &otherVector)"],"name":["operator!="],"detaileddescription":[{"para":["Checks if the values of the vectors aren't equal.",{"simplesect":[{"$":{"kind":"return"},"para":["Flag if vectors aren't equal. "]}]}]}],"description":"Checks if the values of the vectors aren't equal. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector3D","$":{"refid":"classdrider_s_d_k_1_1_vector3_d","kindref":"compound"}}]}],"definition":["Vector3D driderSDK::Vector3D::operator-"],"argsstring":["() const"],"name":["operator-"],"detaileddescription":[{"para":["Returns this vector with negated values. "]}],"description":"Returns this vector with negated values.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"Nombre del test: Vector3D","testClase":{"name":"Vector3D","tests":"31","failures":"0","disabled":"0","errors":"0","time":"0.024","testCases":[{"data":{"name":"forceInit","status":"run","time":"0","classname":"Vector3D"},"name":"forceInit"},{"data":{"name":"constructForVector3D","status":"run","time":"0","classname":"Vector3D"},"name":"constructForVector3D"},{"data":{"name":"constructForVector4D","status":"run","time":"0","classname":"Vector3D"},"name":"constructForVector4D"},{"data":{"name":"constructorFor3Floats","status":"run","time":"0","classname":"Vector3D"},"name":"constructorFor3Floats"},{"data":{"name":"dot","status":"run","time":"0","classname":"Vector3D"},"name":"dot"},{"data":{"name":"cross","status":"run","time":"0","classname":"Vector3D"},"name":"cross"},{"data":{"name":"length","status":"run","time":"0","classname":"Vector3D"},"name":"length"},{"data":{"name":"lengthSQR","status":"run","time":"0","classname":"Vector3D"},"name":"lengthSQR"},{"data":{"name":"normalize","status":"run","time":"0","classname":"Vector3D"},"name":"normalize"},{"data":{"name":"distance","status":"run","time":"0","classname":"Vector3D"},"name":"distance"},{"data":{"name":"distanceSqr","status":"run","time":"0","classname":"Vector3D"},"name":"distanceSqr"},{"data":{"name":"equals","status":"run","time":"0","classname":"Vector3D"},"name":"equals"},{"data":{"name":"operatorBrackets","status":"run","time":"0.001","classname":"Vector3D"},"name":"operatorBrackets"},{"data":{"name":"operatorBracketsPtr","status":"run","time":"0","classname":"Vector3D"},"name":"operatorBracketsPtr"},{"data":{"name":"operatorOr","status":"run","time":"0","classname":"Vector3D"},"name":"operatorOr"},{"data":{"name":"operatorCross","status":"run","time":"0","classname":"Vector3D"},"name":"operatorCross"},{"data":{"name":"operatorEqualVector3","status":"run","time":"0","classname":"Vector3D"},"name":"operatorEqualVector3"},{"data":{"name":"operatorEqualVector4","status":"run","time":"0","classname":"Vector3D"},"name":"operatorEqualVector4"},{"data":{"name":"operatorAdd","status":"run","time":"0","classname":"Vector3D"},"name":"operatorAdd"},{"data":{"name":"operatorAddEqual","status":"run","time":"0","classname":"Vector3D"},"name":"operatorAddEqual"},{"data":{"name":"operatorMinus","status":"run","time":"0","classname":"Vector3D"},"name":"operatorMinus"},{"data":{"name":"operatorMinusEqual","status":"run","time":"0","classname":"Vector3D"},"name":"operatorMinusEqual"},{"data":{"name":"operatorMultiplication","status":"run","time":"0","classname":"Vector3D"},"name":"operatorMultiplication"},{"data":{"name":"operatorMultiplicationEqual","status":"run","time":"0","classname":"Vector3D"},"name":"operatorMultiplicationEqual"},{"data":{"name":"operatorMultiplicationScalar","status":"run","time":"0","classname":"Vector3D"},"name":"operatorMultiplicationScalar"},{"data":{"name":"operatorMultiplicationEqualScalar","status":"run","time":"0","classname":"Vector3D"},"name":"operatorMultiplicationEqualScalar"},{"data":{"name":"operatorDivisionScalar","status":"run","time":"0","classname":"Vector3D"},"name":"operatorDivisionScalar"},{"data":{"name":"operatorDivisionEqualScalar","status":"run","time":"0","classname":"Vector3D"},"name":"operatorDivisionEqualScalar"},{"data":{"name":"operatorEqualEqual","status":"run","time":"0","classname":"Vector3D"},"name":"operatorEqualEqual"},{"data":{"name":"operatorNotEqual","status":"run","time":"0.001","classname":"Vector3D"},"name":"operatorNotEqual"},{"data":{"name":"operatorNegate","status":"run","time":"0","classname":"Vector3D"},"name":"operatorNegate"}]}},{"name":"Vector4D","publicfunctions":[{"type":[""],"definition":["driderSDK::Vector4D::Vector4D"],"argsstring":["()"],"name":["Vector4D"],"detaileddescription":[{"para":["Default constructor. "]}],"description":"Default constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector4D::Vector4D"],"argsstring":["(Math::FORCE_INIT k)"],"name":["Vector4D"],"detaileddescription":[{"para":["Default constructor.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["k"]}],"parameterdescription":[{"para":["Values are initialized with 0. "]}]}]}]}]}],"description":"Default constructor. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector4D::Vector4D"],"argsstring":["(Vector4D &&V)=default"],"name":["Vector4D"],"detaileddescription":[{"para":["Move constructor. "]}],"description":"Move constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector4D::Vector4D"],"argsstring":["(const Vector4D &V)"],"name":["Vector4D"],"detaileddescription":[{"para":["Copy constructor. "]}],"description":"Copy constructor.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector4D::Vector4D"],"argsstring":["(const Vector3D &V)"],"name":["Vector4D"],"detaileddescription":[{"para":["Copy constructor for vec3 to vec4. "]}],"description":"Copy constructor for vec3 to vec4.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector4D::Vector4D"],"argsstring":["(const Vector3D &V, float _w)"],"name":["Vector4D"],"detaileddescription":[{"para":["Copy constructor for vec3 to vec4 with w value. "]}],"description":"Copy constructor for vec3 to vec4 with w value.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector4D::Vector4D"],"argsstring":["(float _x, float _y, float _z, float _w)"],"name":["Vector4D"],"detaileddescription":[{"para":["Initialize constructor with values.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["_x"]}],"parameterdescription":[{"para":["The _x value of the vector"]}]},{"parameternamelist":[{"parametername":["_y"]}],"parameterdescription":[{"para":["The _y value of the vector"]}]},{"parameternamelist":[{"parametername":["_z"]}],"parameterdescription":[{"para":["The _z value of the vector"]}]},{"parameternamelist":[{"parametername":["_w"]}],"parameterdescription":[{"para":["The _w value of the vector "]}]}]}]}]}],"description":"Initialize constructor with values. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::Vector4D::~Vector4D"],"argsstring":["()"],"name":["~Vector4D"],"detaileddescription":[{"para":["Default destructor "]}],"description":"Default destructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::dot3"],"argsstring":["(const Vector4D &B) const"],"name":["dot3"],"detaileddescription":[{"para":["Computes the dot product (excluding w) between this vector and the vector parameter. This operatios is commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The sum of the products of the corresponding entries of the vectors. "]}]}]}],"description":"Computes the dot product (excluding w) between this vector and the vector parameter. This operatios is commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::dot"],"argsstring":["(const Vector4D &B) const"],"name":["dot"],"detaileddescription":[{"para":["Computes the dot product between this vector and the vector parameter. This operatios is commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The sum of the products of the corresponding entries of the vectors. "]}]}]}],"description":"Computes the dot product between this vector and the vector parameter. This operatios is commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D driderSDK::Vector4D::cross"],"argsstring":["(const Vector4D &B) const"],"name":["cross"],"detaileddescription":[{"para":["Computes the cross product between this vector and the vector parameter. W value is not used, and it's final value will be 0. This operatios is NOT commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the cross product is calculated. B (vector parameter) is the rigth value of operation AxB"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Result vector of the cross product "]}]}]}],"description":"Computes the cross product between this vector and the vector parameter. W value is not used, and it's final value will be 0. This operatios is NOT commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::length3"],"argsstring":["() const"],"name":["length3"],"detaileddescription":[{"para":["Computes the length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector. "]}]}]}],"description":"Computes the length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::length"],"argsstring":["() const"],"name":["length"],"detaileddescription":[{"para":["Computes the length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector. "]}]}]}],"description":"Computes the length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::lengthSqr3"],"argsstring":["() const"],"name":["lengthSqr3"],"detaileddescription":[{"para":["Computes the squared length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector squared. "]}]}]}],"description":"Computes the squared length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::lengthSqr"],"argsstring":["() const"],"name":["lengthSqr"],"detaileddescription":[{"para":["Computes the squared length of this vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The length (or \"size\") of the vector squared. "]}]}]}],"description":"Computes the squared length of this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Vector4D::normalize3"],"argsstring":["()"],"name":["normalize3"],"detaileddescription":[{"para":["Normalize the vector. "]}],"description":"Normalize the vector.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["void"],"definition":["void driderSDK::Vector4D::normalize"],"argsstring":["()"],"name":["normalize"],"detaileddescription":[{"para":["Normalize the vector. "]}],"description":"Normalize the vector.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::distance3"],"argsstring":["(const Vector4D &otherVector) const"],"name":["distance3"],"detaileddescription":[{"para":["Computes the distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Vector to calculate the distance"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance "]}]}]}],"description":"Computes the distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::distance"],"argsstring":["(const Vector4D &otherVector) const"],"name":["distance"],"detaileddescription":[{"para":["Computes the distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Vector to calculate the distance"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance "]}]}]}],"description":"Computes the distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::distanceSqr3"],"argsstring":["(const Vector4D &otherVector) const"],"name":["distanceSqr3"],"detaileddescription":[{"para":["Computes the squared distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Vector to calculate the distance"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance "]}]}]}],"description":"Computes the squared distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::distanceSqr"],"argsstring":["(const Vector4D &otherVector) const"],"name":["distanceSqr"],"detaileddescription":[{"para":["Computes the squared distance between two vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Vector to calculate the distance"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Distance "]}]}]}],"description":"Computes the squared distance between two vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector4D::equals"],"argsstring":["(const Vector4D &otherVector, float errorRange=Math::SMALL_NUMBER) const"],"name":["equals"],"detaileddescription":[{"para":["Check's if the other vector is equal to this vector with an error range.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["otherVector"]}],"parameterdescription":[{"para":["Vector to compare with this vector."]}]},{"parameternamelist":[{"parametername":["errorRange"]}],"parameterdescription":[{"para":["The value of the error range."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["bool expression of condition. "]}]}]}],"description":"Check's if the other vector is equal to this vector with an error range. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float *"],"definition":["float * driderSDK::Vector4D::ptr"],"argsstring":["()"],"name":["ptr"],"detaileddescription":[{"para":["Gets a pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A pointer to the first element of the matrix. "]}]}]}],"description":"Gets a pointer to the first element of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float *"],"definition":["const float * driderSDK::Vector4D::ptr"],"argsstring":["() const"],"name":["ptr"],"detaileddescription":[{"para":["Gets a constant pointer to the first element of the matrix.",{"simplesect":[{"$":{"kind":"return"},"para":["A constant pointer to the first element of the matrix. "]}]}]}],"description":"Gets a constant pointer to the first element of the matrix. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float &"],"definition":["float & driderSDK::Vector4D::operator[]"],"argsstring":["(const SizeT index)"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position."]}]}]}],"description":"Gets a reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["const float &"],"definition":["const float & driderSDK::Vector4D::operator[]"],"argsstring":["(const SizeT index) const"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a const reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position."]}]}]}],"description":"Gets a const reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["float"],"definition":["float driderSDK::Vector4D::operator|"],"argsstring":["(const Vector4D &B) const"],"name":["operator|"],"detaileddescription":[{"para":["Computes the dot product between this vector and the vector parameter. This operatios is commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["The sum of the products of the corresponding entries of the vectors. "]}]}]}],"description":"Computes the dot product between this vector and the vector parameter. This operatios is commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D driderSDK::Vector4D::operator^"],"argsstring":["(const Vector4D &B) const"],"name":["operator^"],"detaileddescription":[{"para":["Computes the cross product between this vector and the vector parameter. This operatios is NOT commutative.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["B"]}],"parameterdescription":[{"para":["The vector against which the cross product is calculated. B (vector parameter) is the rigth value of operation AxB"]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["Result vector of the cross product "]}]}]}],"description":"Computes the cross product between this vector and the vector parameter. This operatios is NOT commutative. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D & driderSDK::Vector4D::operator="],"argsstring":["(const Vector4D &A)"],"name":["operator="],"detaileddescription":[{"para":["Set the x, y, z, w values of this vector with the x, y, z, w of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Set the x, y, z, w values of this vector with the x, y, z, w of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D & driderSDK::Vector4D::operator="],"argsstring":["(const Vector3D &A)"],"name":["operator="],"detaileddescription":[{"para":["Set the x, y, z values of this vector with the x, y, z of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Set the x, y, z values of this vector with the x, y, z of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D driderSDK::Vector4D::operator+"],"argsstring":["(const Vector4D &A) const"],"name":["operator+"],"detaileddescription":[{"para":["Adds elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Adds elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D & driderSDK::Vector4D::operator+="],"argsstring":["(const Vector4D &A)"],"name":["operator+="],"detaileddescription":[{"para":["Adds elements of the vector with the elements of the other vector and stores it in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Adds elements of the vector with the elements of the other vector and stores it in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D driderSDK::Vector4D::operator-"],"argsstring":["(const Vector4D &A) const"],"name":["operator-"],"detaileddescription":[{"para":["Substracts elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Substracts elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D & driderSDK::Vector4D::operator-="],"argsstring":["(const Vector4D &A)"],"name":["operator-="],"detaileddescription":[{"para":["Substracts elements of the vector with the elements of the other vector and stores it in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the values to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Substracts elements of the vector with the elements of the other vector and stores it in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D driderSDK::Vector4D::operator*"],"argsstring":["(const Vector4D &A) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies elements of the vector with the elements of the other vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the factors to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Multiplies elements of the vector with the elements of the other vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D & driderSDK::Vector4D::operator*="],"argsstring":["(const Vector4D &A)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies elements of the vector with the elements of the other vector, and stores the result in this vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["A"]}],"parameterdescription":[{"para":["The vector with the factors to use."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Multiplies elements of the vector with the elements of the other vector, and stores the result in this vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D driderSDK::Vector4D::operator*"],"argsstring":["(const float scalar) const"],"name":["operator*"],"detaileddescription":[{"para":["Multiplies elements of the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The factor."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Multiplies elements of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D & driderSDK::Vector4D::operator*="],"argsstring":["(const float scalar)"],"name":["operator*="],"detaileddescription":[{"para":["Multiplies elements of the vector and stores it in the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The factor."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Multiplies elements of the vector and stores it in the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D driderSDK::Vector4D::operator/"],"argsstring":["(const float scalar) const"],"name":["operator/"],"detaileddescription":[{"para":["Divide elements of the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The dividend."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A vector with the result values. "]}]}]}],"description":"Divide elements of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":" &","ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D & driderSDK::Vector4D::operator/="],"argsstring":["(const float scalar)"],"name":["operator/="],"detaileddescription":[{"para":["Divide elements of the vector and stores it in the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["The dividend."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to this vector. "]}]}]}],"description":"Divide elements of the vector and stores it in the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector4D::operator=="],"argsstring":["(const Vector4D &otherVector)"],"name":["operator=="],"detaileddescription":[{"para":["Checks if the values of the vectors are equal.",{"simplesect":[{"$":{"kind":"return"},"para":["Flag if vectors are equal. "]}]}]}],"description":"Checks if the values of the vectors are equal. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["bool"],"definition":["bool driderSDK::Vector4D::operator!="],"argsstring":["(const Vector4D &otherVector)"],"name":["operator!="],"detaileddescription":[{"para":["Checks if the values of the vectors aren't equal.",{"simplesect":[{"$":{"kind":"return"},"para":["Flag if vectors aren't equal. "]}]}]}],"description":"Checks if the values of the vectors aren't equal. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"ref":[{"_":"Vector4D","$":{"refid":"classdrider_s_d_k_1_1_vector4_d","kindref":"compound"}}]}],"definition":["Vector4D driderSDK::Vector4D::operator-"],"argsstring":["() const"],"name":["operator-"],"detaileddescription":[{"para":["Returns this vector with negated values. "]}],"description":"Returns this vector with negated values.  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"Nombre del test: Vector4D","testClase":{"name":"Vector4D","tests":"37","failures":"0","disabled":"0","errors":"0","time":"0.042","testCases":[{"data":{"name":"forceInit","status":"run","time":"0.001","classname":"Vector4D"},"name":"forceInit"},{"data":{"name":"copyConstructor4D","status":"run","time":"0","classname":"Vector4D"},"name":"copyConstructor4D"},{"data":{"name":"copyConstructor3D","status":"run","time":"0","classname":"Vector4D"},"name":"copyConstructor3D"},{"data":{"name":"copyConstructor3DwithW","status":"run","time":"0","classname":"Vector4D"},"name":"copyConstructor3DwithW"},{"data":{"name":"floatsConstructor","status":"run","time":"0","classname":"Vector4D"},"name":"floatsConstructor"},{"data":{"name":"dot3","status":"run","time":"0","classname":"Vector4D"},"name":"dot3"},{"data":{"name":"dot","status":"run","time":"0","classname":"Vector4D"},"name":"dot"},{"data":{"name":"cross","status":"run","time":"0","classname":"Vector4D"},"name":"cross"},{"data":{"name":"length3","status":"run","time":"0","classname":"Vector4D"},"name":"length3"},{"data":{"name":"length","status":"run","time":"0","classname":"Vector4D"},"name":"length"},{"data":{"name":"lengthSqr3","status":"run","time":"0","classname":"Vector4D"},"name":"lengthSqr3"},{"data":{"name":"lengthSqr","status":"run","time":"0","classname":"Vector4D"},"name":"lengthSqr"},{"data":{"name":"normalize3","status":"run","time":"0","classname":"Vector4D"},"name":"normalize3"},{"data":{"name":"normalize","status":"run","time":"0","classname":"Vector4D"},"name":"normalize"},{"data":{"name":"distance3","status":"run","time":"0","classname":"Vector4D"},"name":"distance3"},{"data":{"name":"distance","status":"run","time":"0","classname":"Vector4D"},"name":"distance"},{"data":{"name":"distanceSqr3","status":"run","time":"0","classname":"Vector4D"},"name":"distanceSqr3"},{"data":{"name":"distanceSqr","status":"run","time":"0","classname":"Vector4D"},"name":"distanceSqr"},{"data":{"name":"equals","status":"run","time":"0","classname":"Vector4D"},"name":"equals"},{"data":{"name":"ptrOperator","status":"run","time":"0","classname":"Vector4D"},"name":"ptrOperator"},{"data":{"name":"constPtrOperator","status":"run","time":"0","classname":"Vector4D"},"name":"constPtrOperator"},{"data":{"name":"indexOperator","status":"run","time":"0","classname":"Vector4D"},"name":"indexOperator"},{"data":{"name":"equalvec4Operator","status":"run","time":"0","classname":"Vector4D"},"name":"equalvec4Operator"},{"data":{"name":"equalvec3Operator","status":"run","time":"0","classname":"Vector4D"},"name":"equalvec3Operator"},{"data":{"name":"addition","status":"run","time":"0","classname":"Vector4D"},"name":"addition"},{"data":{"name":"addEqual","status":"run","time":"0","classname":"Vector4D"},"name":"addEqual"},{"data":{"name":"substraction","status":"run","time":"0","classname":"Vector4D"},"name":"substraction"},{"data":{"name":"lessEqual","status":"run","time":"0","classname":"Vector4D"},"name":"lessEqual"},{"data":{"name":"multiplication","status":"run","time":"0","classname":"Vector4D"},"name":"multiplication"},{"data":{"name":"mulEqual","status":"run","time":"0","classname":"Vector4D"},"name":"mulEqual"},{"data":{"name":"multiplicationFloat","status":"run","time":"0","classname":"Vector4D"},"name":"multiplicationFloat"},{"data":{"name":"mulEqualFloat","status":"run","time":"0","classname":"Vector4D"},"name":"mulEqualFloat"},{"data":{"name":"divitionFloat","status":"run","time":"0","classname":"Vector4D"},"name":"divitionFloat"},{"data":{"name":"divEqualFloat","status":"run","time":"0","classname":"Vector4D"},"name":"divEqualFloat"},{"data":{"name":"equalOperator","status":"run","time":"0","classname":"Vector4D"},"name":"equalOperator"},{"data":{"name":"notEqualOperator","status":"run","time":"0","classname":"Vector4D"},"name":"notEqualOperator"},{"data":{"name":"unaryLess","status":"run","time":"0","classname":"Vector4D"},"name":"unaryLess"}]}},{"name":"VectorN","publicfunctions":[{"type":[""],"definition":["driderSDK::VectorN< _elements >::VectorN"],"argsstring":["()"],"name":["VectorN"],"detaileddescription":[{"para":["Default constructor "]}],"description":"Default constructor  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[""],"definition":["driderSDK::VectorN< _elements >::VectorN"],"argsstring":["(float _scalar)"],"name":["VectorN"],"detaileddescription":[{"para":["Constructor using a scalar value.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["_scalar"]}],"parameterdescription":[{"para":["All the elements of the vector are initialized to this value. "]}]}]}]}]}],"description":"Constructor using a scalar value. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE SizeT"],"definition":["FORCEINLINE SizeT driderSDK::VectorN< _elements >::elements"],"argsstring":["() const"],"name":["elements"],"detaileddescription":[{"para":["Number of elements in the vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The number of elements the vector contains. "]}]}]}],"description":"Number of elements in the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE float &"],"definition":["FORCEINLINE float& driderSDK::VectorN< _elements >::operator[]"],"argsstring":["(SizeT index)"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to the element at the [index] position."]}]}]}],"description":"Gets a reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE const float &"],"definition":["FORCEINLINE const float& driderSDK::VectorN< _elements >::operator[]"],"argsstring":["(SizeT index) const"],"name":["operator[]"],"detaileddescription":[{"para":["Gets a const reference to the specified element from the vector.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["index"]}],"parameterdescription":[{"para":["The index of the element."]}]}]},{"$":{"kind":"exception"},"parameteritem":[{"parameternamelist":[{"parametername":["out_of_range"]}],"parameterdescription":[{"para":["If the index is greater than number of elements in the vector. "]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position."]}]}]}],"description":"Gets a const reference to the specified element from the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE float"],"definition":["FORCEINLINE float driderSDK::VectorN< _elements >::dot"],"argsstring":["(const VectorN &other) const"],"name":["dot"],"detaileddescription":[{"para":["Computes the dot product between 2 vectors.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["other"]}],"parameterdescription":[{"para":["The vector against which the dot product is calculated."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A const reference to the element at the [index] position. "]}]}]}],"description":"Computes the dot product between 2 vectors. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE float"],"definition":["FORCEINLINE float driderSDK::VectorN< _elements >::length"],"argsstring":["() const"],"name":["length"],"detaileddescription":[{"para":["Computes the length of the vector.",{"simplesect":[{"$":{"kind":"return"},"para":["Length of the vector. "]}]}]}],"description":"Computes the length of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE float"],"definition":["FORCEINLINE float driderSDK::VectorN< _elements >::lengthSqr"],"argsstring":["() const"],"name":["lengthSqr"],"detaileddescription":[{"para":["Computes the squared length of the vector.",{"simplesect":[{"$":{"kind":"return"},"para":["Squared length of the vector. "]}]}]}],"description":"Computes the squared length of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE void"],"definition":["FORCEINLINE void driderSDK::VectorN< _elements >::normalize"],"argsstring":["()"],"name":["normalize"],"detaileddescription":[{"para":["Normalize the plane "]}],"description":"Normalize the plane  ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE float *"],"definition":["FORCEINLINE float* driderSDK::VectorN< _elements >::ptr"],"argsstring":["()"],"name":["ptr"],"detaileddescription":[{"para":["Gets a pointer to the first element of the vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The pointer to the first element of the vector. "]}]}]}],"description":"Gets a pointer to the first element of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE const float *"],"definition":["FORCEINLINE const float* driderSDK::VectorN< _elements >::ptr"],"argsstring":["() const"],"name":["ptr"],"detaileddescription":[{"para":["Gets a constant pointer to the first element of the vector.",{"simplesect":[{"$":{"kind":"return"},"para":["The constant pointer to the first element of the vector. "]}]}]}],"description":"Gets a constant pointer to the first element of the vector. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE  &","ref":[{"_":"VectorN","$":{"refid":"classdrider_s_d_k_1_1_vector_n","kindref":"compound"}}]}],"definition":["FORCEINLINE VectorN& driderSDK::VectorN< _elements >::operator*="],"argsstring":["(float scalar)"],"name":["operator*="],"detaileddescription":[{"para":["Overload of binary operator *=","This operator performs a memberwise multiplication by a scalar and assigns the result to *this.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Right operand (a scalar value)."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to the transformed vector (*this). "]}]}]}],"description":"Overload of binary operator *= This operator performs a memberwise multiplication by a scalar and assigns the result to *this. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE  &","ref":[{"_":"VectorN","$":{"refid":"classdrider_s_d_k_1_1_vector_n","kindref":"compound"}}]}],"definition":["FORCEINLINE VectorN& driderSDK::VectorN< _elements >::operator/="],"argsstring":["(float scalar)"],"name":["operator/="],"detaileddescription":[{"para":["Overload of binary operator *=","This operator performs a memberwise division by a scalar and assigns the result to *this.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["scalar"]}],"parameterdescription":[{"para":["Right operand (a scalar value)."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to the transformed vector (*this). "]}]}]}],"description":"Overload of binary operator *= This operator performs a memberwise division by a scalar and assigns the result to *this. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE  &","ref":[{"_":"VectorN","$":{"refid":"classdrider_s_d_k_1_1_vector_n","kindref":"compound"}}]}],"definition":["FORCEINLINE VectorN& driderSDK::VectorN< _elements >::operator+="],"argsstring":["(const VectorN &rhs)"],"name":["operator+="],"detaileddescription":[{"para":["Overload of binary operator +=.","This operator performs a memberwise addition of both vectors and assigns the result to *this.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["rhs"]}],"parameterdescription":[{"para":["Right operand (a vector with same number of elements)."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to the transformed vector (*this). "]}]}]}],"description":"Overload of binary operator +=. This operator performs a memberwise addition of both vectors and assigns the result to *this. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":[{"_":"FORCEINLINE  &","ref":[{"_":"VectorN","$":{"refid":"classdrider_s_d_k_1_1_vector_n","kindref":"compound"}}]}],"definition":["FORCEINLINE VectorN& driderSDK::VectorN< _elements >::operator-="],"argsstring":["(const VectorN &rhs)"],"name":["operator-="],"detaileddescription":[{"para":["Overload of binary operator +=.","This operator performs a memberwise subtraction of both vectors and assigns the result to *this.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["rhs"]}],"parameterdescription":[{"para":["Right operand (a vector with same number of elements)."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["A reference to the transformed vector (*this). "]}]}]}],"description":"Overload of binary operator +=. This operator performs a memberwise subtraction of both vectors and assigns the result to *this. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE bool"],"definition":["FORCEINLINE bool driderSDK::VectorN< _elements >::operator=="],"argsstring":["(const VectorN &rhs)"],"name":["operator=="],"detaileddescription":[{"para":["Overload of binary operator ==.","This operator performs a memberwise equality comparison.",{"parameterlist":[{"$":{"kind":"param"},"parameteritem":[{"parameternamelist":[{"parametername":["rhs"]}],"parameterdescription":[{"para":["Right operand (a vector with same number of elements)."]}]}]}],"simplesect":[{"$":{"kind":"return"},"para":["True if all elements of *this vector are equal to all elements of rhs vector, false otherwise. "]}]}]}],"description":"Overload of binary operator ==. This operator performs a memberwise equality comparison. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"},{"type":["FORCEINLINE bool"],"definition":["FORCEINLINE bool driderSDK::VectorN< _elements >::operator!="],"argsstring":["(const VectorN &rhs)"],"name":["operator!="],"detaileddescription":[{"para":["Overload of binary operator ==.","This operator performs a memberwise inequality comparison.",{"simplesect":[{"$":{"kind":"return"},"para":["True if an elements of *this vector is unequal to an elements of rhs vector, false otherwise. "]}]}]}],"description":"Overload of binary operator ==. This operator performs a memberwise inequality comparison. [object Object] ","testName":"No tiene TEST asignado","statusTest":"Falta TestCase","resultTest":"Pendiente"}],"testFile":"No existe Test con el nombre de la clase"},{"name":"Vertex","publicfunctions":[],"testFile":"No existe Test con el nombre de la clase"}]